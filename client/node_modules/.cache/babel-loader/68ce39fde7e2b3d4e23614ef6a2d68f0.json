{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brandonn\\\\Homework\\\\Projects\\\\Mediger\\\\client\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Auth0Provider } from \"./react-auth0-spa\";\nimport config from \"./auth_config.json\";\nimport history from \"./utils/history\";\nApp.use(function (req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n});\n\nconst onRedirectCallback = appState => {\n  history.push(appState && appState.targetUrl ? appState.targetUrl : window.location.pathname);\n};\n\nReactDOM.render(React.createElement(Auth0Provider, {\n  domain: config.domain,\n  client_id: config.clientId // redirect_uri={window.location.origin}\n  ,\n  redirect_uri: \"http://localhost:3000/Admin\",\n  onRedirectCallback: onRedirectCallback,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n})), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/brandonn/Homework/Projects/Mediger/client/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Auth0Provider","config","history","use","req","res","next","header","onRedirectCallback","appState","push","targetUrl","window","location","pathname","render","domain","clientId","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEAJ,GAAG,CAACK,GAAJ,CAAQ,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAAED,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AAAgDF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AAA8FD,EAAAA,IAAI;AAAK,CAA1L;;AAEA,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACrCP,EAAAA,OAAO,CAACQ,IAAR,CACED,QAAQ,IAAIA,QAAQ,CAACE,SAArB,GACIF,QAAQ,CAACE,SADb,GAEIC,MAAM,CAACC,QAAP,CAAgBC,QAHtB;AAKD,CAND;;AAQAjB,QAAQ,CAACkB,MAAT,CACE,oBAAC,aAAD;AACE,EAAA,MAAM,EAAEd,MAAM,CAACe,MADjB;AAEE,EAAA,SAAS,EAAEf,MAAM,CAACgB,QAFpB,CAGE;AAHF;AAIE,EAAA,YAAY,EAAE,6BAJhB;AAKE,EAAA,kBAAkB,EAAET,kBALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAOE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPF,CADF,EAUEU,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAVF,E,CAaA;AACA;AACA;;AACApB,aAAa,CAACqB,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Auth0Provider } from \"./react-auth0-spa\";\nimport config from \"./auth_config.json\";\nimport history from \"./utils/history\";\n\nApp.use(function(req, res, next) { res.header(\"Access-Control-Allow-Origin\", \"*\"); res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\"); next(); });\n\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    // redirect_uri={window.location.origin}\n    redirect_uri={\"http://localhost:3000/Admin\"}\n    onRedirectCallback={onRedirectCallback}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}
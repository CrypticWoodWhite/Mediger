{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brandonn\\\\Homework\\\\Projects\\\\Mediger\\\\client\\\\src\\\\components\\\\AvailableRoom\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { Nav, NavItem, Navbar, NavDropdown, DropdownItem, Button, Dropdown, Form, FormGroup } from 'react-bootstrap';\nimport { Col, Row, Container } from \"../Grid\";\nimport Table from 'react-bootstrap/Table';\nimport \"./style.css\";\n\nclass AvailableRoom extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.checkIn = (id, patid, CheckedIn) => {\n      console.log(CheckedIn);\n      console.log(this.state);\n      fetch(\"http://localhost:3010/api/room/\", {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id,\n          Available: 0\n        })\n      });\n      fetch(\"http://localhost:3010/api/patient/\", {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: patid,\n          CheckedIn: 1\n        })\n      }).then(res => console.log(res), this.componentDidMount()).catch(err => console.log(err));\n    };\n\n    this.checkOut = (id, patid) => {\n      console.log(id);\n      fetch(\"http://localhost:3010/api/room/\", {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id,\n          Available: 1\n        })\n      });\n      console.log(patid);\n      fetch(\"http://localhost:3010/api/patient/\", {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: patid,\n          CheckedIn: 0\n        })\n      }).then(res => console.log(res), this.componentDidMount()).catch(err => console.log(err));\n    };\n\n    this.handleSelect = id => {\n      // what am I suppose to write in there to get the value?\n      console.log(id);\n      this.setState({\n        chosenRoomID: id\n      });\n      console.log(this.state);\n    };\n\n    this.state = {\n      patients: [],\n      rooms: [],\n      id: '',\n      CheckedIn: '',\n      First_Name: '',\n      Last_Name: '',\n      roomID: '',\n      Name: '',\n      Available: '',\n      patientID: '',\n      chosenRoomID: ''\n    };\n    this.checkIn = this.checkIn.bind(this);\n    this.checkOut = this.checkOut.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3010/api/room/\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      res.json().then(data => {\n        this.setState({\n          rooms: data\n        });\n      });\n    });\n    fetch(\"http://localhost:3010/api/patient/\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      res.json().then(data => {\n        this.setState({\n          patients: data\n        });\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Table, {\n      className: \"patientTable\",\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"th\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"th\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Room Number\"), React.createElement(\"th\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Available Rooms\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.state.patients.length ? this.state.patients.map(patients => React.createElement(\"tr\", {\n      className: \"d-flex\",\n      key: patients.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, patients.First_Name), React.createElement(\"td\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, patients.Last_Name), React.createElement(\"td\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, patients.roomID), React.createElement(Col, {\n      size: \"lg-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      className: \"dropDown\",\n      style: {\n        display: \"inline\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"selected\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Choose a Room \")), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.rooms.length ? this.state.rooms.map(rooms => React.createElement(Dropdown.Item, {\n      onSelect: () => {\n        this.handleSelect(rooms.id, patients.CheckedIn);\n      },\n      key: rooms.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, rooms.id, \" \")) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"No Rooms to Assign\")))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.checkIn(this.state.chosenRoomID, patients.id, patients.CheckedIn);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Check-In\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.checkOut(patients.roomID, patients.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Check-Out\")))) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"No Results to Display\")));\n  }\n\n}\n\nexport default AvailableRoom;","map":{"version":3,"sources":["C:/Users/brandonn/Homework/Projects/Mediger/client/src/components/AvailableRoom/index.js"],"names":["React","Component","Nav","NavItem","Navbar","NavDropdown","DropdownItem","Button","Dropdown","Form","FormGroup","Col","Row","Container","Table","AvailableRoom","constructor","handleInputChange","event","target","name","value","setState","checkIn","id","patid","CheckedIn","console","log","state","fetch","method","headers","body","JSON","stringify","Available","then","res","componentDidMount","catch","err","checkOut","handleSelect","chosenRoomID","patients","rooms","First_Name","Last_Name","roomID","Name","patientID","bind","json","data","render","length","map","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Nav, NavItem, Navbar, NavDropdown, DropdownItem, Button, Dropdown, Form, FormGroup } from 'react-bootstrap';\nimport { Col, Row, Container } from \"../Grid\";\nimport Table from 'react-bootstrap/Table'\nimport \"./style.css\";\n\n\nclass AvailableRoom extends Component {\n    constructor() {\n        super();\n        this.state = {\n            patients: [],\n            rooms: [],\n            id: '',\n            CheckedIn: '',\n            First_Name: '',\n            Last_Name: '',\n            roomID: '',\n            Name: '',\n            Available: '',\n            patientID: '',\n            chosenRoomID: ''\n        };\n\n        this.checkIn = this.checkIn.bind(this);\n        this.checkOut = this.checkOut.bind(this);\n    }\n\n    \n    componentDidMount() {\n        fetch(\"http://localhost:3010/api/room/\", {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n\n\n        }).then((res) => {\n            res.json().then((data) => {\n                this.setState({ rooms: data })\n            });\n        });\n\n        fetch(\"http://localhost:3010/api/patient/\", {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n\n\n        }).then((res) => {\n            res.json().then((data) => {\n                this.setState({ patients: data })\n            });\n        });\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    checkIn = (id, patid, CheckedIn) => {\n        console.log(CheckedIn)\n        console.log(this.state)\n\n\n        fetch(\"http://localhost:3010/api/room/\", {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                id: id,\n                Available: 0\n            })\n\n        })\n\n        fetch(\"http://localhost:3010/api/patient/\", {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                id: patid,\n                CheckedIn: 1\n            })\n\n        }).then(res => console.log(res), this.componentDidMount())\n        .catch(err => console.log(err));\n    \n        }\n\n    checkOut = (id, patid) => {\n        console.log(id)\n        fetch(\"http://localhost:3010/api/room/\", {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                id: id,\n                Available: 1\n            })\n\n        })\n        console.log(patid)\n        fetch(\"http://localhost:3010/api/patient/\", {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                id: patid,\n                CheckedIn: 0\n            })\n\n        }).then(res => console.log(res), this.componentDidMount())\n        .catch(err => console.log(err));\n    \n        }\n    \n        handleSelect = id => {\n            // what am I suppose to write in there to get the value?\n            console.log(id)\n            this.setState({ chosenRoomID: id })\n            console.log(this.state)\n        }\n\n    render() {\n        return (\n            <Table className=\"patientTable\" striped bordered hover>\n                <thead>\n                    <tr className=\"d-flex\">\n                        <th className=\"col-1\">First Name</th>\n                        <th className=\"col-1\">Last Name</th>\n                        <th className=\"col-2\">Room Number</th>\n                        <th className=\"col-2\">Available Rooms</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {this.state.patients.length ? (\n                        this.state.patients.map(patients => (\n                            <tr className=\"d-flex\" key={patients.id}>\n                                {/* <ListItem key={patients.id}> */}\n\n                                <td className=\"col-1\">{patients.First_Name}</td>\n                                <td className=\"col-1\">{patients.Last_Name}</td>\n                                <td className=\"col-2\">{patients.roomID}</td>\n                                 <Col size=\"lg-2\">\n                                    <Dropdown className=\"dropDown\" style={{ display: \"inline\" }}>\n                                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                                        <span id=\"selected\">Choose a Room </span>\n                                    </Dropdown.Toggle>\n\n                                        <Dropdown.Menu >\n                                        {this.state.rooms.length ? (\n                                        this.state.rooms.map(rooms => (\n                                            <Dropdown.Item onSelect={() => {this.handleSelect(rooms.id, patients.CheckedIn)}} key={rooms.id} >{rooms.id} </Dropdown.Item>\n                                            ))\n                                            ) : (\n                                                    <h3>No Rooms to Assign</h3>\n                                                )}\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                </Col>                        \n                                <td><Button onClick={() => { this.checkIn(this.state.chosenRoomID, patients.id, patients.CheckedIn) }}>Check-In</Button></td>\n                                <td><Button onClick={() => { this.checkOut(patients.roomID, patients.id) }}>Check-Out</Button></td>\n                            </tr>\n                        ))\n                    ) : (\n                            <h3>No Results to Display</h3>\n                        )}\n                </tbody>\n\n            </Table>\n        )\n    }\n}\nexport default AvailableRoom"]},"metadata":{},"sourceType":"module"}
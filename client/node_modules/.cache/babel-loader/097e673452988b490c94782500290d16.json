{"ast":null,"code":"var _jsxFileName = \"/Users/aakratigarg/Desktop/Mediger/client/src/components/PatientList/index.js\";\nimport React, { Component } from \"react\";\nimport \"./style.css\";\nimport Table from 'react-bootstrap/Table';\nimport { Nav, NavItem, Navbar, NavDropdown, DropdownItem } from 'react-bootstrap';\nimport { NavLink, Link } from 'react-router-dom';\nimport DeleteBtn from \"../DeleteBtn\";\nimport { List, ListItem } from \"../List\";\n\nclass PatientDiv extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patients: [],\n      id: '',\n      First_Name: '',\n      Last_Name: '',\n      Date_Of_Birth: '',\n      Address: '',\n      City: '',\n      State: '',\n      Zip_Code: '',\n      Email: '',\n      orgID: '',\n      RoomID: ''\n    };\n\n    this.deletePatient = id => {\n      fetch(\"http://localhost:3010/api/patient/\" + id, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => this.componentDidMount()).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3010/api/patient/\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      res.json().then(data => {\n        this.setState({\n          patients: data,\n          First_Name: \"\",\n          Last_Name: \"\",\n          Date_Of_Birth: \"\",\n          Address: \"\",\n          City: \"\",\n          State: \"\",\n          Zip_Code: \"\",\n          Email: \"\",\n          orgID: \"\",\n          RoomID: \"\"\n        });\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"patientDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sideBarMenuContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      fluid: \"true\",\n      inverse: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Navbar.Collapse, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Navbar.Text, {\n      className: \"nt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: \"nl\",\n      to: \"/PatientList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"PatientList\"), React.createElement(NavLink, {\n      className: \"nl\",\n      to: \"/CreateRoom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"CreateRoom\"), React.createElement(NavLink, {\n      className: \"nl\",\n      to: \"/CompanyInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Company Info\"), React.createElement(NavLink, {\n      className: \"nl\",\n      to: \"/FrontDesk\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Front Desk\"))))), React.createElement(Table, {\n      className: \"patientTable\",\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      style: {\n        width: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Notes\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"DateOfBirth\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"State\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"ZipCode\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Email\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.patients.length ? this.state.patients.map(patients => React.createElement(\"tr\", {\n      key: patients.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      style: {\n        width: \"5rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Notes/\" + patients.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Notes\"), React.createElement(DeleteBtn, {\n      style: {\n        Display: \"inline\"\n      },\n      onClick: () => {\n        if (window.confirm('Are you sure you wish to delete this patient?')) this.deletePatient(patients.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, patients.First_Name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, patients.Last_Name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, patients.Date_Of_Birth), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, patients.Address), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, patients.City), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, patients.State), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, patients.Zip_Code), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, patients.Email))) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"No Results to Display\"))));\n  }\n\n} //exportes our Nav component\n\n\nexport default PatientDiv;","map":{"version":3,"sources":["/Users/aakratigarg/Desktop/Mediger/client/src/components/PatientList/index.js"],"names":["React","Component","Table","Nav","NavItem","Navbar","NavDropdown","DropdownItem","NavLink","Link","DeleteBtn","List","ListItem","PatientDiv","constructor","props","state","patients","id","First_Name","Last_Name","Date_Of_Birth","Address","City","State","Zip_Code","Email","orgID","RoomID","deletePatient","fetch","method","headers","then","res","componentDidMount","catch","err","console","log","json","data","setState","render","width","length","map","Display","window","confirm"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./style.css\";\nimport Table from 'react-bootstrap/Table'\nimport { Nav, NavItem, Navbar, NavDropdown, DropdownItem } from 'react-bootstrap';\n\nimport { NavLink, Link } from 'react-router-dom';\nimport DeleteBtn from \"../DeleteBtn\";\nimport { List, ListItem } from \"../List\";\n\nclass PatientDiv extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n    state = {\n        patients: [],\n        id: '',\n        First_Name: '',\n        Last_Name: '',\n        Date_Of_Birth: '',\n        Address: '',\n        City: '',\n        State: '',\n        Zip_Code: '',\n        Email: '',\n        orgID: '',\n        RoomID: ''\n    };\n\n\n\n    componentDidMount() {\n        fetch(\"http://localhost:3010/api/patient/\", {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n\n\n        }).then((res) => {\n            res.json().then((data) => {\n                this.setState({ patients: data, First_Name: \"\", Last_Name: \"\", Date_Of_Birth: \"\", Address: \"\", City: \"\", State: \"\", Zip_Code: \"\", Email: \"\", orgID: \"\", RoomID: \"\" })\n            });\n        });\n\n    }\n    deletePatient = id => {\n        fetch(\"http://localhost:3010/api/patient/\" + id, {\n            method: 'DELETE',\n            headers: { 'Content-Type': 'application/json' },\n\n        })\n            .then(res => this.componentDidMount())\n            .catch(err => console.log(err));\n    };\n    render() {\n        return (\n\n            <div className=\"patientDiv\" >\n\n                <div className=\"sideBarMenuContainer\">\n                    <Navbar fluid=\"true\" inverse=\"true\" >\n                        <Navbar.Collapse>\n                            <Navbar.Text className=\"nt\">\n                                <NavLink className=\"nl\" to=\"/PatientList\">\n                                    PatientList\n                        </NavLink>\n                                <NavLink className=\"nl\" to=\"/CreateRoom\">\n                                    CreateRoom\n                        </NavLink>\n                                <NavLink className=\"nl\" to=\"/CompanyInfo\">\n                                    Company Info\n                        </NavLink>\n                                <NavLink className=\"nl\" to=\"/FrontDesk\">\n                                    Front Desk\n                        </NavLink>\n                            </Navbar.Text>\n                        </Navbar.Collapse>\n                    </Navbar>\n\n                </div>\n                <Table className=\"patientTable\" striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th style={{width:\"20px\"}}>Notes</th>\n                            <th >First Name</th>\n                            <th>Last Name</th>\n                            <th>DateOfBirth</th>\n                            <th>Address</th>\n                            <th>City</th>\n                            <th>State</th>\n                            <th>ZipCode</th>\n                            <th>Email</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.patients.length ? (\n                   this.state.patients.map(patients => (\n                       <tr key={patients.id}>\n                       {/* <ListItem key={patients.id}> */}\n                           <td style={{width:\"5rem\"}}>\n                           <Link to={\"/Notes/\" + patients.id}>\n                               Notes\n                               </Link>\n                               <DeleteBtn style={{Display:\"inline\"}}onClick={() => { if (window.confirm('Are you sure you wish to delete this patient?')) this.deletePatient(patients.id)}} />\n                               </td>\n                               <td >{patients.First_Name}</td>\n                               <td>{patients.Last_Name}</td>\n                               <td >{patients.Date_Of_Birth}</td>\n                               <td>{patients.Address}</td>\n                               <td>{patients.City}</td>\n                               <td>{patients.State}</td>\n                               <td>{patients.Zip_Code}</td>\n                               <td>{patients.Email}</td>\n                               {/* <strong>\n                                   {patients.First_Name} {patients.Last_Name} {patients.Address}  {patients.City}  {patients.State} {patients.Zip_Code} {patients.Email} {patients.orgID} {patients.RoomID}\n                               </strong> */}\n                       </tr>\n                   ))\n           ) : (\n                   <h3>No Results to Display</h3>\n               )}\n                    </tbody>\n                   \n                </Table>\n                {/* {this.state.patients.length ? (\n                    <List>\n                        {this.state.patients.map(patients => (\n                            <ListItem key={patients.id}>\n                                <Link to={\"/Notes/\" + patients.id}>\n                                    <strong>\n                                        {patients.First_Name} {patients.Last_Name} {patients.Address}  {patients.City}  {patients.State} {patients.Zip_Code} {patients.Email} {patients.orgID} {patients.RoomID}\n                                    </strong>\n                                </Link>\n                                <DeleteBtn onClick={() => { if (window.confirm('Are you sure you wish to delete this patient?')) this.deletePatient(patients.id)}} />\n                            </ListItem>\n                        ))}\n                    </List>\n                ) : (\n                        <h3>No Results to Display</h3>\n                    )} */}\n            </div>\n\n        )\n    };\n}\n//exportes our Nav component\nexport default PatientDiv;\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brandonn\\\\Homework\\\\Projects\\\\Mediger\\\\client\\\\src\\\\components\\\\AvailableRoom\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { Nav, NavItem, Navbar, NavDropdown, DropdownItem, Button, Dropdown, Form, FormGroup } from 'react-bootstrap';\nimport { Col, Row, Container } from \"../Grid\";\nimport Table from 'react-bootstrap/Table';\nimport \"./style.css\";\n\nclass AvailableRoom extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      patients: [],\n      rooms: [],\n      id: '',\n      First_Name: '',\n      Last_Name: '',\n      roomID: '',\n      Name: '',\n      Available: '',\n      patientID: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.checkOut = this.checkOut.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3010/api/room/\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      res.json().then(data => {\n        this.setState({\n          rooms: data\n        });\n        console.log(this.state);\n      });\n    });\n    fetch(\"http://localhost:3010/api/patient/\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      res.json().then(data => {\n        this.setState({\n          patients: data,\n          First_Name: \"\",\n          Last_Name: \"\",\n          Date_Of_Birth: \"\",\n          Address: \"\",\n          City: \"\",\n          State: \"\",\n          Zip_Code: \"\",\n          Email: \"\",\n          orgID: \"\",\n          RoomID: \"\"\n        });\n      });\n    });\n  }\n\n  handleSubmit(id) {\n    event.preventDefault();\n    console.log(id);\n    fetch(\"http://localhost:3010/api/room/notavailable\", {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        First_Name: this.state.First_Name,\n        Last_Name: this.state.Last_Name,\n        id: this.state.roomID,\n        Available: 0\n      })\n    }).then(res => this.componentDidMount()).catch(err => console.log(err));\n  }\n\n  checkOut(id) {\n    event.preventDefault();\n    console.log(id);\n    fetch(\"http://localhost:3010/api/room/available\", {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        First_Name: this.state.First_Name,\n        Last_Name: this.state.Last_Name,\n        id: this.state.roomID,\n        Available: 1\n      })\n    }).then(res => this.componentDidMount()).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(Table, {\n      className: \"patientTable\",\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"th\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"th\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Room Number\"), React.createElement(\"th\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Available Rooms\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.patients.length ? this.state.patients.map(patients => React.createElement(\"tr\", {\n      className: \"d-flex\",\n      key: patients.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, patients.First_Name), React.createElement(\"td\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, patients.Last_Name), React.createElement(\"td\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, patients.roomID), React.createElement(Col, {\n      size: \"lg-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      className: \"dropDown\",\n      style: {\n        display: \"inline\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Rooms Available\"), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      href: \"#/action-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Room1\"), React.createElement(Dropdown.Item, {\n      href: \"#/action-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Room2\"), React.createElement(Dropdown.Item, {\n      href: \"#/action-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Room3\")))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Button, {\n      key: obj.id,\n      id: obj.id,\n      onClick: this.handleSubmit(obj.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Check-In\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Button, {\n      key: obj.id,\n      id: obj.id,\n      onClick: this.checkOut(obj.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Check-Out\")))) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"No Results to Display\")));\n  }\n\n}\n\nexport default AvailableRoom;","map":{"version":3,"sources":["C:/Users/brandonn/Homework/Projects/Mediger/client/src/components/AvailableRoom/index.js"],"names":["React","Component","Nav","NavItem","Navbar","NavDropdown","DropdownItem","Button","Dropdown","Form","FormGroup","Col","Row","Container","Table","AvailableRoom","constructor","handleInputChange","event","target","name","value","setState","state","patients","rooms","id","First_Name","Last_Name","roomID","Name","Available","patientID","handleSubmit","bind","checkOut","componentDidMount","fetch","method","headers","then","res","json","data","console","log","Date_Of_Birth","Address","City","State","Zip_Code","Email","orgID","RoomID","preventDefault","body","JSON","stringify","catch","err","render","length","map","display","obj"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,MAAvB,EAA+BC,WAA/B,EAA4CC,YAA5C,EAA0DC,MAA1D,EAAkEC,QAAlE,EAA4EC,IAA5E,EAAkFC,SAAlF,QAAmG,iBAAnG;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,SAApC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAO,aAAP;;AAGA,MAAMC,aAAN,SAA4Bd,SAA5B,CAAsC;AAClCe,EAAAA,WAAW,GAAG;AACV;;AADU,SA0CdC,iBA1Cc,GA0CMC,KAAK,IAAI;AAAA,4BACDA,KAAK,CAACC,MADL;AAAA,YACjBC,IADiB,iBACjBA,IADiB;AAAA,YACXC,KADW,iBACXA,KADW;AAEzB,WAAKC,QAAL,CAAc;AACV,SAACF,IAAD,GAAQC;AADE,OAAd;AAGH,KA/Ca;;AAEV,SAAKE,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,EAAE,EAAE,EAHK;AAITC,MAAAA,UAAU,EAAE,EAJH;AAKTC,MAAAA,SAAS,EAAE,EALF;AAMTC,MAAAA,MAAM,EAAE,EANC;AAOTC,MAAAA,IAAI,EAAE,EAPG;AAQTC,MAAAA,SAAS,EAAE,EARF;AASTC,MAAAA,SAAS,EAAE;AATF,KAAb;AAYA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AACDE,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AACrCC,MAAAA,MAAM,EAAE,KAD6B;AAErCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAF4B,KAApC,CAAL,CAKGC,IALH,CAKSC,GAAD,IAAS;AACbA,MAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAiBG,IAAD,IAAU;AACtB,aAAKrB,QAAL,CAAc;AAAEG,UAAAA,KAAK,EAAEkB;AAAT,SAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAjB;AACH,OAHD;AAIH,KAVD;AAYAc,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AACxCC,MAAAA,MAAM,EAAE,KADgC;AAExCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAF+B,KAAvC,CAAL,CAKGC,IALH,CAKSC,GAAD,IAAS;AACbA,MAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAiBG,IAAD,IAAU;AACtB,aAAKrB,QAAL,CAAc;AAAEE,UAAAA,QAAQ,EAAEmB,IAAZ;AAAkBhB,UAAAA,UAAU,EAAE,EAA9B;AAAkCC,UAAAA,SAAS,EAAE,EAA7C;AAAiDkB,UAAAA,aAAa,EAAE,EAAhE;AAAoEC,UAAAA,OAAO,EAAE,EAA7E;AAAiFC,UAAAA,IAAI,EAAE,EAAvF;AAA2FC,UAAAA,KAAK,EAAE,EAAlG;AAAsGC,UAAAA,QAAQ,EAAE,EAAhH;AAAoHC,UAAAA,KAAK,EAAE,EAA3H;AAA+HC,UAAAA,KAAK,EAAE,EAAtI;AAA0IC,UAAAA,MAAM,EAAE;AAAlJ,SAAd;AACH,OAFD;AAGH,KATD;AAUH;;AASDpB,EAAAA,YAAY,CAACP,EAAD,EAAK;AACbR,IAAAA,KAAK,CAACoC,cAAN;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYnB,EAAZ;AACAW,IAAAA,KAAK,CAAC,6CAAD,EAAgD;AACjDC,MAAAA,MAAM,EAAE,KADyC;AAEjDC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFwC;AAGjDgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB9B,QAAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWI,UADN;AAEjBC,QAAAA,SAAS,EAAE,KAAKL,KAAL,CAAWK,SAFL;AAGjBF,QAAAA,EAAE,EAAE,KAAKH,KAAL,CAAWM,MAHE;AAIjBE,QAAAA,SAAS,EAAE;AAJM,OAAf;AAH2C,KAAhD,CAAL,CAWKS,IAXL,CAWUC,GAAG,IAAI,KAAKL,iBAAL,EAXjB,EAYKsB,KAZL,CAYWC,GAAG,IAAIf,OAAO,CAACC,GAAR,CAAYc,GAAZ,CAZlB;AAaH;;AAEDxB,EAAAA,QAAQ,CAACT,EAAD,EAAK;AACTR,IAAAA,KAAK,CAACoC,cAAN;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYnB,EAAZ;AACAW,IAAAA,KAAK,CAAC,0CAAD,EAA6C;AAC9CC,MAAAA,MAAM,EAAE,KADsC;AAE9CC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFqC;AAG9CgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB9B,QAAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWI,UADN;AAEjBC,QAAAA,SAAS,EAAE,KAAKL,KAAL,CAAWK,SAFL;AAGjBF,QAAAA,EAAE,EAAE,KAAKH,KAAL,CAAWM,MAHE;AAIjBE,QAAAA,SAAS,EAAE;AAJM,OAAf;AAHwC,KAA7C,CAAL,CAWKS,IAXL,CAWUC,GAAG,IAAI,KAAKL,iBAAL,EAXjB,EAYKsB,KAZL,CAYWC,GAAG,IAAIf,OAAO,CAACC,GAAR,CAAYc,GAAZ,CAZlB;AAaH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,OAAO,MAAvC;AAAwC,MAAA,QAAQ,MAAhD;AAAiD,MAAA,KAAK,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,EAII;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJJ,CADJ,CADJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKrC,KAAL,CAAWC,QAAX,CAAoBqC,MAApB,GACG,KAAKtC,KAAL,CAAWC,QAAX,CAAoBsC,GAApB,CAAwBtC,QAAQ,IAC5B;AAAI,MAAA,SAAS,EAAC,QAAd;AAAuB,MAAA,GAAG,EAAEA,QAAQ,CAACE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBF,QAAQ,CAACG,UAAhC,CAHJ,EAII;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBH,QAAQ,CAACI,SAAhC,CAJJ,EAKI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBJ,QAAQ,CAACK,MAAhC,CALJ,EAMI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,UAApB;AAA+B,MAAA,KAAK,EAAE;AAAEkC,QAAAA,OAAO,EAAE;AAAX,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD,CAAU,MAAV;AAAiB,MAAA,OAAO,EAAC,SAAzB;AAAmC,MAAA,EAAE,EAAC,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAKI,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAGI,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CALJ,CADJ,CANJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEC,GAAG,CAACtC,EAAjB;AAAqB,MAAA,EAAE,EAAEsC,GAAG,CAACtC,EAA7B;AAAiC,MAAA,OAAO,EAAE,KAAKO,YAAL,CAAkB+B,GAAG,CAACtC,EAAtB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ,CAnBJ,EAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEsC,GAAG,CAACtC,EAAjB;AAAqB,MAAA,EAAE,EAAEsC,GAAG,CAACtC,EAA7B;AAAiC,MAAA,OAAO,EAAE,KAAKS,QAAL,CAAc6B,GAAG,CAACtC,EAAlB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAJ,CApBJ,CADJ,CADH,GA0BO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BA3BZ,CAVJ,CADJ;AA4CH;;AAnIiC;;AAqItC,eAAeX,aAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Nav, NavItem, Navbar, NavDropdown, DropdownItem, Button, Dropdown, Form, FormGroup } from 'react-bootstrap';\nimport { Col, Row, Container } from \"../Grid\";\nimport Table from 'react-bootstrap/Table'\nimport \"./style.css\";\n\n\nclass AvailableRoom extends Component {\n    constructor() {\n        super();\n        this.state = {\n            patients: [],\n            rooms: [],\n            id: '',\n            First_Name: '',\n            Last_Name: '',\n            roomID: '',\n            Name: '',\n            Available: '',\n            patientID: ''\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.checkOut = this.checkOut.bind(this);\n    }\n    componentDidMount() {\n        fetch(\"http://localhost:3010/api/room/\", {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n\n\n        }).then((res) => {\n            res.json().then((data) => {\n                this.setState({ rooms: data })\n                console.log(this.state);\n            });\n        });\n\n        fetch(\"http://localhost:3010/api/patient/\", {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n\n\n        }).then((res) => {\n            res.json().then((data) => {\n                this.setState({ patients: data, First_Name: \"\", Last_Name: \"\", Date_Of_Birth: \"\", Address: \"\", City: \"\", State: \"\", Zip_Code: \"\", Email: \"\", orgID: \"\", RoomID: \"\" })\n            });\n        });\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleSubmit(id) {\n        event.preventDefault();\n        console.log(id)\n        fetch(\"http://localhost:3010/api/room/notavailable\", {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                First_Name: this.state.First_Name,\n                Last_Name: this.state.Last_Name,\n                id: this.state.roomID,\n                Available: 0\n            })\n\n        })\n            .then(res => this.componentDidMount())\n            .catch(err => console.log(err));\n    }\n\n    checkOut(id) {\n        event.preventDefault();\n        console.log(id)\n        fetch(\"http://localhost:3010/api/room/available\", {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                First_Name: this.state.First_Name,\n                Last_Name: this.state.Last_Name,\n                id: this.state.roomID,\n                Available: 1\n            })\n\n        })\n            .then(res => this.componentDidMount())\n            .catch(err => console.log(err));\n    }\n    \n    render() {\n        return (\n            <Table className=\"patientTable\" striped bordered hover>\n                <thead>\n                    <tr className=\"d-flex\">\n                        <th className=\"col-1\">First Name</th>\n                        <th className=\"col-1\">Last Name</th>\n                        <th className=\"col-2\">Room Number</th>\n                        <th className=\"col-2\">Available Rooms</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {this.state.patients.length ? (\n                        this.state.patients.map(patients => (\n                            <tr className=\"d-flex\" key={patients.id}>\n                                {/* <ListItem key={patients.id}> */}\n\n                                <td className=\"col-1\">{patients.First_Name}</td>\n                                <td className=\"col-1\">{patients.Last_Name}</td>\n                                <td className=\"col-2\">{patients.roomID}</td>\n                                <Col size=\"lg-2\">\n                                    <Dropdown className=\"dropDown\" style={{ display: \"inline\" }}>\n                                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                                            Rooms Available\n                                    </Dropdown.Toggle>\n\n                                        <Dropdown.Menu>\n                                            <Dropdown.Item href=\"#/action-1\">Room1</Dropdown.Item>\n                                            <Dropdown.Item href=\"#/action-2\">Room2</Dropdown.Item>\n                                            <Dropdown.Item href=\"#/action-3\">Room3</Dropdown.Item>\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                </Col>\n                                <td><Button key={obj.id} id={obj.id} onClick={this.handleSubmit(obj.id)}>Check-In</Button></td>\n                                <td><Button key={obj.id} id={obj.id} onClick={this.checkOut(obj.id)}>Check-Out</Button></td>\n                            </tr>\n                        ))\n                    ) : (\n                            <h3>No Results to Display</h3>\n                        )}\n                </tbody>\n\n            </Table>\n        )\n    }\n}\nexport default AvailableRoom"]},"metadata":{},"sourceType":"module"}
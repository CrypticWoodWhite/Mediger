{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brandonn\\\\Homework\\\\Projects\\\\Mediger\\\\client\\\\src\\\\components\\\\NoteDiv\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../Grid\";\nimport Jumbotron from \"../Jumbotron\";\nimport DeleteBtn from \"../DeleteBtn\";\nimport EditBtn from \"../EditBtn\";\n\nclass NoteDiv extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: [],\n      patient: []\n    };\n\n    this.deletePatient = id => {\n      fetch(\"http://localhost:3010/api/notes/\" + id, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => this.componentDidMount()).catch(err => console.log(err));\n    };\n\n    this.editNote = id => {\n      fetch(\"http://localhost:3010/api/notes/\" + id, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          Note: this.state.Note,\n          patientID: this.props.match.params.id\n        })\n      }).then(res => this.componentDidMount()).catch(err => console.log(err));\n    };\n\n    console.log(this);\n  }\n\n  // When this component mounts, grab the book with the _id of this.props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  componentDidMount() {\n    console.log(this.props);\n    fetch(\"http://localhost:3010/api/notes/\" + this.props.match.params.id, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      res.json().then(data => {\n        this.setState({\n          notes: data\n        });\n        console.log(this.state);\n      });\n    });\n    fetch(\"http://localhost:3010/api/patient/\" + this.props.match.params.id, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      res.json().then(data => {\n        this.setState({\n          patient: data\n        });\n        console.log(this.state);\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.patient.map(patients => React.createElement(\"p\", {\n      key: patients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, patients.First_Name, \" \", patients.Last_Name)))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-10 md-offset-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Patient Notes\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), this.state.notes.map((notes, id) => React.createElement(\"p\", {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, notes.Note, React.createElement(DeleteBtn, {\n      onClick: () => {\n        if (window.confirm('Are you sure you wish to delete this patient?')) this.deletePatient(notes.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/PatientList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"\\u2190 Back to Patients\"))));\n  }\n\n}\n\nexport default NoteDiv;","map":{"version":3,"sources":["C:/Users/brandonn/Homework/Projects/Mediger/client/src/components/NoteDiv/index.js"],"names":["React","Component","Link","Col","Row","Container","Jumbotron","DeleteBtn","EditBtn","NoteDiv","constructor","props","state","notes","patient","deletePatient","id","fetch","method","headers","then","res","componentDidMount","catch","err","console","log","editNote","body","JSON","stringify","Note","patientID","match","params","json","data","setState","render","map","patients","First_Name","Last_Name","window","confirm"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../Grid\";\r\nimport Jumbotron from \"../Jumbotron\";\r\nimport DeleteBtn from \"../DeleteBtn\";\r\nimport EditBtn from \"../EditBtn\";\r\n\r\nclass NoteDiv extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(this)\r\n    }\r\n    state = {\r\n        notes: [],\r\n        patient: []\r\n    }\r\n\r\n    // When this component mounts, grab the book with the _id of this.props.match.params.id\r\n    // e.g. localhost:3000/books/599dcb67f0f16317844583fc\r\n\r\n\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        fetch(\"http://localhost:3010/api/notes/\" + this.props.match.params.id, {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n\r\n\r\n        }).then((res) => {\r\n            res.json().then((data) => {\r\n                this.setState({ notes: data })\r\n                console.log(this.state);\r\n            });\r\n        });\r\n\r\n\r\n        fetch(\"http://localhost:3010/api/patient/\" + this.props.match.params.id, {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n\r\n\r\n        }).then((res) => {\r\n            res.json().then((data) => {\r\n                this.setState({ patient: data })\r\n                console.log(this.state);\r\n\r\n            });\r\n        });\r\n\r\n    };\r\n\r\n    deletePatient = id => {\r\n        fetch(\"http://localhost:3010/api/notes/\" + id, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' },\r\n\r\n        })\r\n            .then(res => this.componentDidMount())\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n\r\n\r\n    editNote = id => {\r\n\r\n        fetch(\"http://localhost:3010/api/notes/\" + id, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                Note: this.state.Note,\r\n                patientID: this.props.match.params.id\r\n            })\r\n        })\r\n            .then(res => this.componentDidMount())\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <Jumbotron>\r\n                            <h1>\r\n                                {this.state.patient.map(patients => (\r\n                                    <p key={patients}>{patients.First_Name} {patients.Last_Name}</p>\r\n                                ))}\r\n                            </h1>\r\n                        </Jumbotron>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col size=\"md-10 md-offset-1\">\r\n                        <article>\r\n                            <h1>Patient Notes</h1>\r\n\r\n                            <br></br>\r\n                            {this.state.notes.map((notes, id) => (\r\n                                <p key={id}>{notes.Note}\r\n\r\n                                    <DeleteBtn onClick={() => { if (window.confirm('Are you sure you wish to delete this patient?')) this.deletePatient(notes.id) }} />\r\n                                </p>\r\n                            ))}\r\n\r\n                        </article>\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col size=\"md-2\">\r\n                        <Link to=\"/PatientList\">← Back to Patients</Link>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NoteDiv;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brandonn\\\\Homework\\\\Projects\\\\Mediger\\\\client\\\\src\\\\pages\\\\Notes.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nclass Notes extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notes: {}\n    };\n\n    this.getNotes = id => {\n      fetch(\"http://localhost:3010/api/notes/\" + id, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        res.json().then(data => {\n          this.setState({\n            patients: data,\n            First_Name: \"\",\n            Last_Name: \"\",\n            Date_Of_Birth: \"\",\n            Address: \"\",\n            City: \"\",\n            State: \"\",\n            Zip_Code: \"\",\n            Email: \"\",\n            orgID: \"\",\n            RoomID: \"\"\n          });\n        });\n      });\n    };\n  }\n\n  // When this component mounts, grab the book with the _id of this.props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  componentDidMount() {\n    getNotes();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.state.notes.title, \" by \", this.state.notes.author)))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-10 md-offset-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Synopsis\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.notes.synopsis)))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"\\u2190 Back to Authors\"))));\n  }\n\n}\n\nexport default Notes;","map":{"version":3,"sources":["C:/Users/brandonn/Homework/Projects/Mediger/client/src/pages/Notes.js"],"names":["React","Component","Link","Col","Row","Container","Jumbotron","Notes","state","notes","getNotes","id","fetch","method","headers","then","res","json","data","setState","patients","First_Name","Last_Name","Date_Of_Birth","Address","City","State","Zip_Code","Email","orgID","RoomID","componentDidMount","render","title","author","synopsis"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAGA,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BO,KAD4B,GACpB;AACNC,MAAAA,KAAK,EAAE;AADD,KADoB;;AAAA,SAU9BC,QAV8B,GAUnBC,EAAE,IAAG;AACZC,MAAAA,KAAK,CAAC,qCAAqCD,EAAtC,EAA0C;AAC3CE,QAAAA,MAAM,EAAE,KADmC;AAE3CC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAFkC,OAA1C,CAAL,CAKGC,IALH,CAKSC,GAAD,IAAS;AACbA,QAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAiBG,IAAD,IAAU;AACtB,eAAKC,QAAL,CAAc;AAAEC,YAAAA,QAAQ,EAAEF,IAAZ;AAAkBG,YAAAA,UAAU,EAAE,EAA9B;AAAkCC,YAAAA,SAAS,EAAE,EAA7C;AAAiDC,YAAAA,aAAa,EAAE,EAAhE;AAAoEC,YAAAA,OAAO,EAAE,EAA7E;AAAiFC,YAAAA,IAAI,EAAE,EAAvF;AAA2FC,YAAAA,KAAK,EAAE,EAAlG;AAAsGC,YAAAA,QAAQ,EAAE,EAAhH;AAAoHC,YAAAA,KAAK,EAAE,EAA3H;AAA+HC,YAAAA,KAAK,EAAE,EAAtI;AAA0IC,YAAAA,MAAM,EAAE;AAAlJ,WAAd;AACH,SAFD;AAGH,OATD;AAUH,KArB6B;AAAA;;AAI5B;AACA;AACAC,EAAAA,iBAAiB,GAAG;AAClBrB,IAAAA,QAAQ;AAEX;;AAaCsB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKxB,KAAL,CAAWC,KAAX,CAAiBwB,KADpB,UAC+B,KAAKzB,KAAL,CAAWC,KAAX,CAAiByB,MADhD,CADF,CADF,CADF,CADF,EAUE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK1B,KAAL,CAAWC,KAAX,CAAiB0B,QADpB,CAFF,CADF,CADF,CAVF,EAoBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CADF,CApBF,CADF;AA4BD;;AAnD2B;;AAsD9B,eAAe5B,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\n\r\nclass Notes extends Component {\r\n  state = {\r\n    notes: {}\r\n  };\r\n  // When this component mounts, grab the book with the _id of this.props.match.params.id\r\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\r\n  componentDidMount() {\r\n    getNotes()\r\n\r\n}\r\ngetNotes = id =>{\r\n    fetch(\"http://localhost:3010/api/notes/\" + id, {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n\r\n\r\n    }).then((res) => {\r\n        res.json().then((data) => {\r\n            this.setState({ patients: data, First_Name: \"\", Last_Name: \"\", Date_Of_Birth: \"\", Address: \"\", City: \"\", State: \"\", Zip_Code: \"\", Email: \"\", orgID: \"\", RoomID: \"\" })\r\n        });\r\n    });\r\n}\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <Jumbotron>\r\n              <h1>\r\n                {this.state.notes.title} by {this.state.notes.author}\r\n              </h1>\r\n            </Jumbotron>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col size=\"md-10 md-offset-1\">\r\n            <article>\r\n              <h1>Synopsis</h1>\r\n              <p>\r\n                {this.state.notes.synopsis}\r\n              </p>\r\n            </article>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col size=\"md-2\">\r\n            <Link to=\"/\">‚Üê Back to Authors</Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notes;"]},"metadata":{},"sourceType":"module"}
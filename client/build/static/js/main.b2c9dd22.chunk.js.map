{"version":3,"sources":["react-auth0-spa.js","components/PrivateRoute.js","components/Loading.js","components/Nav/index.js","components/CenterDiv/index.js","components/Footer/index.js","pages/Home.js","components/NavSignIn/index.js","components/AdminDiv/index.js","pages/Admin.js","components/Profile.js","utils/history.js","components/DeleteBtn/index.js","components/PatientList/index.js","pages/PatientList.js","config.js","components/CreateRoomDiv/index.js","pages/CreateRoom.js","components/CompanyInfoForm/index.js","components/CompanyInfoFormDiv/index.js","pages/CompanyInfo.js","components/Grid/index.js","components/FrontDeskForm/index.js","components/AvailableRoom/index.js","components/FrontDesk/index.js","pages/FrontDesk.js","components/Jumbotron/index.js","components/EditBtn/index.js","pages/Notes.js","utils/initFontAwesome.js","App.js","serviceWorker.js","index.js","assets/loading.svg","images/carouselImage2.png","images/carouselImage14.jpeg","images/carouselImage15.png"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","PrivateRoute","Component","component","path","rest","isAuthenticated","loginWithRedirect","useEffect","a","appState","targetUrl","fn","render","props","Loading","className","src","loading","alt","appName","color","borderToLink","Header","user","logout","Navbar","expand","Brand","href","style","Toggle","aria-controls","Collapse","id","Nav","fontSize","Link","onClick","MainDiv","Carousel","autoPlay","fade","interval","Item","require","Caption","FooterDiv","height","Date","getFullYear","Home","Footer","returnTo","ProfileDiv","fluid","inverse","Text","to","position","left","fontFamily","Admin","Profile","picture","name","email","JSON","stringify","createBrowserHistory","DeleteBtn","role","tabIndex","PatientDiv","state","patients","First_Name","Last_Name","Date_Of_Birth","Address","City","State","Zip_Code","Email","orgID","RoomID","deletePatient","roomID","fetch","method","headers","body","Available","then","res","componentDidMount","catch","err","console","log","json","data","setState","Card","Body","Table","striped","bordered","hover","width","this","length","map","key","textDecoration","float","confirm","PatientList","API_URI","CreateRoomDiv","patientRooms","Name","handleInputChange","event","target","value","deleteRoom","handleSubmit","bind","preventDefault","FormData","patientid","Form","onSubmit","Group","Label","Control","type","onChange","required","Button","backgroundColor","CreateRoom","CompanyInfoForm","Phone_Number","Row","Col","pattern","CompanyInfoFormDiv","CompanyInfo","Container","children","size","split","join","FrontDeskForm","reload","AvailableRoom","checkIn","patid","CheckedIn","checkOut","handleSelect","chosenRoomID","rooms","patientID","Dropdown","variant","Menu","onSelect","FrontDeskDiv","FrontDesk","Jumbotron","clear","paddingTop","textAlign","EditBtn","Notes","deleteNote","editNote","Note","match","params","notes","patient","userID","library","add","faLink","faUser","faPowerOff","initFontAwesome","App","exact","Boolean","hostname","ReactDOM","onRedirectCallback","initOptions","useState","setIsAuthenticated","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","getUser","initAuth0","loginWithPopup","error","Provider","getIdTokenClaims","getTokenSilently","getTokenWithPopup","domain","config","client_id","clientId","redirect_uri","push","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b2c9dd22.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes(\"code=\")) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n  const { isAuthenticated, loginWithRedirect } = useAuth0();\n\n  useEffect(() => {\n    const fn = async () => {\n      if (!isAuthenticated) {\n        await loginWithRedirect({\n          appState: { targetUrl: path }\n        });\n      }\n    };\n    fn();\n  }, [isAuthenticated, loginWithRedirect, path]);\n\n  const render = props =>\n    isAuthenticated === true ? <Component {...props} /> : null;\n\n  return <Route path={path} render={render} {...rest} />;\n};\n\nPrivateRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n    .isRequired,\n  path: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ]).isRequired\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport loading from \"../assets/loading.svg\";\n\nconst Loading = () => (\n  <div className=\"spinner\">\n    <img src={loading} alt=\"Loading\" />\n  </div>\n);\n\nexport default Loading;\n","//Use deconstructor to import both full react package and specifically component feature from it\nimport React from \"react\";\n//Use deconstructor to import Link feature from react-router-dom package\n// import { Link } from \"react-router-dom\";\nimport { Nav, Navbar } from 'react-bootstrap';\n//import { NavLink as RouterNavLink } from \"react-router-dom\";\nimport { useAuth0 } from \"../../react-auth0-spa\";\n\nimport './style.css';\nconst appName = {\n  color: 'darkBlue',\n\n};\nconst logoSize ={\n  height:'40px',\n  width:'40px',\n}\nconst borderToLink={\n\n  color:'white',\n  \n}\nconst Header = () => {\n   \n  const { user, isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n  const logoutWithRedirect = () =>\n    logout({\n      returnTo: window.location.origin\n    });\n    return(\n<Navbar className=\"nb\" expand=\"lg\">\n  <Navbar.Brand href=\"/\" style={appName}><h1>Mediger</h1></Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  <Navbar.Collapse id=\"basic-navbar-nav\">\n    <Nav className=\"logo\">\n    <h2 style={{fontSize:55,color:\"red\"}}>&#x2624;</h2>\n    </Nav>\n    <Nav className=\"ml-auto\">\n      <Nav.Link onClick={() => loginWithRedirect({})} className=\"justify-content-end text-center\" style={borderToLink}>SignUp/LogIn</Nav.Link>\n\n    </Nav>\n  </Navbar.Collapse>\n</Navbar>\n    )\n};\n\n//exportes our Nav component\nexport default Header;\n","import React from \"react\";\nimport { Carousel } from 'react-bootstrap';\nimport \"./style.css\";\n\nconst MainDiv = () => {\n    return(\n<Carousel autoPlay={true} fade=\"true\" interval={1200} className=\"mainCarousel\">\n  <Carousel.Item className=\"ci\" >\n    <img\n      className=\"d-block w-100 h-100\"\n      src={require('../../images/carouselImage2.png')}\n      alt=\"First slide\"\n    />\n    <Carousel.Caption className=\"carouselCaption\">\n    <h1>Efficiency, Accuracy & Convenience</h1> \n      <h4>We're changing the world with technology</h4>\n   \n    </Carousel.Caption>\n  </Carousel.Item>\n  <Carousel.Item className=\"ci\">\n    <img\n      className=\"d-block w-100\"\n      src={require('../../images/carouselImage14.jpeg')}\n      alt=\"Third slide\"\n    />\n\n    <Carousel.Caption className=\"carouselCaption\">\n    <h1>Taking care of those who take care of us</h1>\n      <h4>Get yourself Registered Now!</h4>\n    </Carousel.Caption>\n  </Carousel.Item>\n  <Carousel.Item className=\"ci\">\n    <img\n      className=\"d-block w-100\"\n      src={require('../../images/carouselImage15.png')}\n      alt=\"Third slide\"\n    />\n\n    <Carousel.Caption className=\"carouselCaption\">\n    <h1>Technology makes the world a New Place</h1>\n      <h4>Easy & Useful</h4>\n    </Carousel.Caption>\n  </Carousel.Item>\n</Carousel>\n    )\n};\n\n//exportes our Nav component\nexport default MainDiv;\n","import React from \"react\";\nimport { Nav, Navbar } from 'react-bootstrap';\nimport \"./style.css\";\nconst FooterDiv = () => {\n  return ( \n      <div className=\"footerDiv\">\n       <div style={{height:70}}></div>\n       <div> <p> &copy; {new Date().getFullYear()} Copyright</p></div>\n     \n    </div>\n    \n    \n  );\n}\n\nexport default FooterDiv;","//Using desconstructor to import \"Component\" feature from react package\nimport React from \"react\";\nimport NavBar from \"../components/Nav\";\nimport MainDiv from \"../components/CenterDiv\";\nimport FooterDiv from \"../components/Footer\";\n\nfunction Home() {\n    return (\n        <div>\n        <NavBar />\n        <MainDiv />\n        <FooterDiv/>\n        </div>\n        \n    )\n}\n\nexport default Home;","//Use deconstructor to import both full react package and specifically component feature from it\nimport React from \"react\";\n//Use deconstructor to import Link feature from react-router-dom package\n// import { Link } from \"react-router-dom\";\nimport { Nav, Navbar } from 'react-bootstrap';\n//import { NavLink as RouterNavLink } from \"react-router-dom\";\nimport { useAuth0 } from \"../../react-auth0-spa\";\n\nimport './style.css';\nconst appName = {\n  color: 'darkBlue',\n\n};\nconst logoSize ={\n  height:'40px',\n  width:'40px',\n}\nconst borderToLink={\n  \n  color:'white',\n  \n}\nconst Header = () => {\n   \n  const { user, isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n  const logoutWithRedirect = () =>\n    logout({\n      returnTo:\"http://localhost:3000\"\n    });\n    return(\n<Navbar className=\"nb\" expand=\"lg\">\n  <Navbar.Brand href=\"/\" style={appName}><h1>Mediger</h1></Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  <Navbar.Collapse id=\"basic-navbar-nav\">\n    <Nav>\n    <h2 style={{fontSize:55,color:\"red\"}}>&#x2624;</h2>\n    </Nav>\n    <Nav className=\"ml-auto\">\n      <Nav.Link onClick={() => logoutWithRedirect({})} className=\"justify-content-end text-center\" style={borderToLink}>LogOut</Nav.Link>\n\n    </Nav>\n  </Navbar.Collapse>\n</Navbar>\n    )\n};\n\n//exportes our Nav component\nexport default Header;\n","import React from \"react\";\nimport styles from './sideBarMenu.css';\n// import Glyphicon from 'react-bootstrap/lib/Glyphicon';\nimport { Nav, NavItem, Navbar, NavDropdown, DropdownItem } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nconst ProfileDiv = () => {\n    return (\n        <div className=\"mainDiv\" >\n            <div className=\"row\">\n                <div className=\"col-lg-4\">\n                    <div className=\"sideBarMenuContainer\">\n                        <Navbar fluid=\"true\" inverse=\"true\" >\n                            <Navbar.Collapse>\n                                <Navbar.Text className=\"nt\">\n                                    <NavLink className=\"nl\" to=\"/PatientList\">\n                                        Patient List\n                        </NavLink>\n                                    <NavLink className=\"nl\" to=\"/CreateRoom\">\n                                        Rooms\n                        </NavLink>\n                                    <NavLink className=\"nl\" to=\"/CompanyInfo\">\n                                        Company Info\n                        </NavLink>\n                                    <NavLink className=\"nl\" to=\"/FrontDesk\">\n                                        Front Desk\n                        </NavLink>\n                                </Navbar.Text>\n                            </Navbar.Collapse>\n                        </Navbar>\n                    </div>\n                </div>\n                <div className=\"col-lg-5\">\n                    <div className=\"row r1\">\n\n                    </div>\n                    <div className=\"row r2\">\n                        <div className=\"col-lg-12 col21\">\n                            <div className=\"row\">\n                                <h1 style={{ color: \"darkBlue\", position:\"relative\",left:\"20%\" }}><strong>Welcome to Mediger</strong></h1>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-lg-1\"></div>\n                                <div className=\"col-lg-6\">\n                                <h6 className=\"glad\" style={{ fontFamily: \"TimesNewRoman\", color:\"Red\",position:\"relative\",left:\"35%\" }}><strong>WE'RE GLAD YOU ARE HERE</strong></h6>\n                                </div>  \n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n\n    )\n};\n\n//exportes our Nav component\nexport default ProfileDiv;\n\n","import React from \"react\";\nimport Header from \"../components/NavSignIn\";\nimport FooterDiv from \"../components/Footer\";\nimport ProfileDiv from \"../components/AdminDiv\";\n\nfunction Admin() {\n    return (\n        <div>\n        <Header />\n        <ProfileDiv />\n        <FooterDiv/>\n        </div>\n    )\n}\n\nexport default Admin;","// src/components/Profile.js\n\nimport React, { Fragment } from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst Profile = () => {\n  const { loading, user } = useAuth0();\n\n  if (loading || !user) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Fragment>\n      <img src={user.picture} alt=\"Profile\" />\n\n      <h2>{user.name}</h2>\n      <p>{user.email}</p>\n      <code>{JSON.stringify(user, null, 2)}</code>\n    </Fragment>\n  );\n};\n\nexport default Profile;","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      X\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport Table from 'react-bootstrap/Table'\nimport { Nav, NavItem, Navbar, NavDropdown, DropdownItem, Card } from 'react-bootstrap';\n\nimport { NavLink, Link } from 'react-router-dom';\nimport DeleteBtn from \"../DeleteBtn\";\nimport { List, ListItem } from \"../List\";\n\nclass PatientDiv extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n    state = {\n        patients: [],\n        id: '',\n        First_Name: '',\n        Last_Name: '',\n        Date_Of_Birth: '',\n        Address: '',\n        City: '',\n        State: '',\n        Zip_Code: '',\n        Email: '',\n        orgID: '',\n        RoomID: ''\n    };\n\n\n\n    componentDidMount() {\n        fetch(\"http://localhost:3010/api/patient/\", {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n\n\n        }).then((res) => {\n            res.json().then((data) => {\n                this.setState({ patients: data, First_Name: \"\", Last_Name: \"\", Date_Of_Birth: \"\", Address: \"\", City: \"\", State: \"\", Zip_Code: \"\", Email: \"\", orgID: \"\", RoomID: \"\" })\n            });\n        });\n\n    }\n    deletePatient = (id, roomID) => {\n        fetch(\"http://localhost:3010/api/patient/\" + id, {\n            method: 'DELETE',\n            headers: { 'Content-Type': 'application/json' },\n\n        })\n\n        fetch(\"http://localhost:3010/api/notes/patient/\" + id, {\n            method: 'DELETE',\n            headers: { 'Content-Type': 'application/json' },\n\n        })\n\n        fetch(\"http://localhost:3010/api/room\", {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                id: roomID,\n                Available: 1\n            })\n        })\n            .then(res => this.componentDidMount())\n            .catch(err => console.log(err));\n    };\n    render() {\n        return (\n\n            <div className=\"patientDiv\">\n                <div className=\"row\">\n                    <div className=\"col-lg-2\">\n                    <div className=\"sideBarMenuContainer\">\n                    <Navbar fluid=\"true\" inverse=\"true\" >\n                        <Navbar.Collapse>\n                            <Navbar.Text className=\"nt\">\n                                <NavLink className=\"nl\" to=\"/PatientList\">\n                                    Patient List\n                        </NavLink>\n                                <NavLink className=\"nl\" to=\"/CreateRoom\">\n                                    Rooms\n                        </NavLink>\n                                <NavLink className=\"nl\" to=\"/CompanyInfo\">\n                                    Company Info\n                        </NavLink>\n                                <NavLink className=\"nl\" to=\"/FrontDesk\">\n                                    Front Desk\n                        </NavLink>\n                            </Navbar.Text>\n                        </Navbar.Collapse>\n                    </Navbar>\n\n                </div>\n                    </div>\n                    <div className=\"col-lg-10\">\n                    <Card>\n                <Card.Header  style={{fontFamily:\"TimesNewRoman\",color:\"darkblue\",fontSize:\"20px\"}}><strong>Patient List</strong></Card.Header>\n                <Card.Body className=\"text-left\">\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th style={{width:\"20px\"}}>Notes</th>\n                            <th>Room Number</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>DateOfBirth</th>\n                            <th>Address</th>\n                            <th>City</th>\n                            <th>State</th>\n                            <th>ZipCode</th>\n                            <th>Email</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.patients.length ? (\n                   this.state.patients.map(patients => (\n                       <tr key={patients.id}>\n                       {/* <ListItem key={patients.id}> */}\n                           <td style={{width:\"5rem\"}}>\n                           <Link to={\"/Notes/\" + patients.id} style={{color:\"black\",textDecoration:\"none\"}}>\n                               Notes\n                               </Link>\n                              \n                               </td>\n                               <td style={{width:\"3rem\"}}>{patients.roomID}</td>\n                               <td style={{width:\"8rem\"}}>{patients.First_Name}</td>\n                               <td style={{width:\"8rem\"}}>{patients.Last_Name}</td>\n                               <td style={{width:\"5rem\"}}>{patients.Date_Of_Birth}</td>\n                               <td style={{width:\"10rem\"}}>{patients.Address}</td>\n                               <td style={{width:\"3rem\"}}>{patients.City}</td>\n                               <td style={{width:\"2rem\"}}>{patients.State}</td>\n                               <td style={{width:\"3rem\"}}>{patients.Zip_Code}</td>\n                               <td style={{width:\"3rem\"}}>{patients.Email}</td>\n                               {/* <strong>\n                                   {patients.First_Name} {patients.Last_Name} {patients.Address}  {patients.City}  {patients.State} {patients.Zip_Code} {patients.Email} {patients.orgID} {patients.RoomID}\n                               </strong> */}\n                               <td > <strong><DeleteBtn style={{float:\"left\"}} onClick={() => { if (window.confirm('Are you sure you wish to delete this patient?')) this.deletePatient(patients.id, patients.roomID)}} /></strong></td>\n                       </tr>\n                     \n                   ))\n                  \n           ) : (\n                   <h3>No Results to Display</h3>\n               )}\n                  </tbody>   \n                   \n                </Table>\n                </Card.Body>\n                </Card>\n                \n                    </div>\n                </div>\n               \n                \n                {/* {this.state.patients.length ? (\n                    <List>\n                        {this.state.patients.map(patients => (\n                            <ListItem key={patients.id}>\n                                <Link to={\"/Notes/\" + patients.id}>\n                                    <strong>\n                                        {patients.First_Name} {patients.Last_Name} {patients.Address}  {patients.City}  {patients.State} {patients.Zip_Code} {patients.Email} {patients.orgID} {patients.RoomID}\n                                    </strong>\n                                </Link>\n                                <DeleteBtn onClick={() => { if (window.confirm('Are you sure you wish to delete this patient?')) this.deletePatient(patients.id)}} />\n                            </ListItem>\n                        ))}\n                    </List>\n                ) : (\n                        // <h3>No Results to Display</h3>\n                    )} */}\n            </div>\n\n        )\n    };\n}\n//exportes our Nav component\nexport default PatientDiv;\n\n","import React from \"react\";\nimport Header from \"../components/NavSignIn\";\nimport FooterDiv from \"../components/Footer\";\nimport PatientDiv from \"../components/PatientList\";\nfunction PatientList() {\n    return (\n        <div>\n        <Header />\n       <PatientDiv/>\n        <FooterDiv/>\n        </div>\n    )\n}\n\nexport default PatientList;","// general config goes here\nconst configGlob = {};\n// production specific config goes here\nconst configProd = {\n  API_URI: \"https://mediger.herokuapp.com\"\n};\n// development specific config goes here\nconst configDev = {\n  API_URI: \"http://localhost:3010\"\n};\n\n// merged config\nconst config = { ...configDev };\nexport default config;","import React, { Component } from \"react\";\nimport './style.css';\nimport config from '../../config';\n// import Glyphicon from 'react-bootstrap/lib/Glyphicon';\nimport { Nav, NavItem, Navbar, NavDropdown, DropdownItem, Card } from 'react-bootstrap';\nimport { Form, Button } from 'react-bootstrap';\nimport { NavLink, Link } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table'\nimport DeleteBtn from \"../DeleteBtn\";\n\n\nclass CreateRoomDiv extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.deleteRoom = this.deleteRoom.bind(this);\n  };\n\n  state = {\n    patientRooms: [],\n    id: '',\n    First_Name: '',\n    Last_Name: '',\n    orgID: '',\n    RoomID: '',\n    Name: '',\n    orgID: ''\n  }\n\n\n  componentDidMount() {\n\n\n    fetch(\"http://localhost:3010/api/room/room\", {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n\n\n    }).then((res) => {\n      res.json().then((data) => {\n        this.setState({ patientRooms: data })\n        console.log(this.state.patientRooms)\n      });\n    })\n\n\n  }\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const data = new FormData(event.target);\n\n    console.log(...data)\n\n\n    console.log(this.state.Name)\n    console.log(this.state.orgID)\n\n    fetch(\"http://localhost:3010/api/room/createRoom\", {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        Name: this.state.Name,\n        orgID: this.state.orgID,\n\n      })\n\n    }).then(res => this.componentDidMount())\n\n  }\n  deleteRoom = id => {\n    fetch(\"http://localhost:3010/api/room/\" + id, {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n\n    }).then(res => this.componentDidMount())\n  }\n\n  render() {\n    return (\n      <div className=\"createRoomDiv\" >\n        <div className=\"row\">\n          <div className=\"col-lg-2\">\n            <div className=\"sideBarMenuContainer\">\n              <Navbar fluid=\"true\" inverse=\"true\" >\n                <Navbar.Collapse>\n                  <Navbar.Text className=\"nt\">\n                    <NavLink className=\"nl\" to=\"/PatientList\">\n                      Patient List\n                        </NavLink>\n                    <NavLink className=\"nl\" to=\"/CreateRoom\">\n                      Rooms\n                        </NavLink>\n                    <NavLink className=\"nl\" to=\"/CompanyInfo\">\n                      Company Info\n                        </NavLink>\n                    <NavLink className=\"nl\" to=\"/FrontDesk\">\n                      Front Desk\n                        </NavLink>\n                  </Navbar.Text>\n                </Navbar.Collapse>\n              </Navbar>\n            </div>\n          </div>\n          <div className=\"col-lg-10\">\n            <div className=\"row\">\n              <Card className=\"tableCard\">\n                <Card.Header className=\"text-center\" style={{ fontFamily: \"TimesNewRoman\", color: \"darkblue\", fontSize: \"20px\" }}><strong>Room Details</strong></Card.Header>\n                <Card.Body>\n                  <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>Room Number</th>\n                        <th>Room Name</th>\n                        <th>Patient</th>\n                        <th>Notes</th>\n                        <th></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.patientRooms.length ? (\n                        this.state.patientRooms.map(patientRooms => (\n                          <tr key={patientRooms.id}>\n                            <td style={{ width: \"3rem\" }}>{patientRooms.id}</td>\n                            <td style={{ width: \"8rem\" }}>{patientRooms.name}</td>\n                            <td style={{ width: \"8rem\" }}>{patientRooms.First_Name} {patientRooms.Last_Name}</td>\n                            <td style={{ width: \"5rem\" }}><Link to={\"/Notes/\" + patientRooms.patientid}>Notes</Link></td>\n\n                            <td > <strong><DeleteBtn style={{ float: \"left\" }} onClick={() => { if (window.confirm('Are you sure you wish to delete this room?')) this.deleteRoom(patientRooms.id) }} /></strong></td>\n                          </tr>\n\n                        ))\n\n                      ) : (\n                          <h3>No Results to Display</h3>\n                        )}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card>\n            </div>\n            <br></br>\n            <div>\n              <div className=\"row\" >\n                <div className=\"col-lg-3\"></div>\n                <div className=\"col-lg-6\">\n                  <Card>\n                    <Card.Header className=\"text-center\" style={{ fontFamily: \"TimesNewRoman\", color: \"darkblue\", fontSize: \"20px\" }}><strong>Create Room</strong></Card.Header>\n                    <Card.Body className=\"text-left\">\n                      <Form className=\"createRoomForm\" onSubmit={this.handleSubmit} style={{ fontFamily: \"TimesNewRoman\", color: \"darkblue\", fontSize: \"15px\" }}>\n                        <div className=\"row\">\n                          <div className=\"col-lg-2\"></div>\n                          <div className=\"col-lg-4\">\n                            <Form.Group>\n                              <Form.Label><strong>Enter Room Name</strong></Form.Label>\n                              <Form.Control className=\"inputO\" type=\"input\" name=\"Name\" onChange={this.handleInputChange} required/>\n                            </Form.Group>\n                          </div>\n                          <div className=\"col-lg-4\">\n                            <Form.Group>\n                              <Form.Label><strong>Enter Organization ID</strong></Form.Label>\n                              <Form.Control className=\"inputO\" type=\"input\" name=\"orgID\" onChange={this.handleInputChange} required/>\n                            </Form.Group>\n                          </div>\n                          <div className=\"col-lg-5\"></div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-lg-4\"></div>\n                          <div className=\"col-lg-4\">\n                            <Button type=\"submit\" style={{ backgroundColor: \"darkBlue\", fontFamily: \"TimesNewRoman\", fontSize: \"16px\" }}><strong>\n                              Create Room!\n                            </strong>\n                            </Button>\n                          </div>\n                          <div className=\"col-lg-2\"></div>\n                        </div>\n\n                      </Form>\n                    </Card.Body>\n\n                  </Card>\n                </div>\n                <div className=\"col-lg-3\"></div>\n\n              </div>\n            </div>\n            <div className=\"col-lg-2\"></div>\n\n\n          </div>\n        </div>\n      </div>\n    )\n  };\n}\n\n//exports our Nav component\nexport default CreateRoomDiv;\n\n","import React from \"react\";\nimport API from \"../utils/API\";\nimport Header from \"../components/NavSignIn\";\nimport FooterDiv from \"../components/Footer\";\nimport CreateRoomDiv from \"../components/CreateRoomDiv\";\n\nfunction CreateRoom() {\n    return (\n        <div>\n        <Header />\n        <CreateRoomDiv />\n        <FooterDiv/>\n        </div>\n    )\n}\n\nexport default CreateRoom;","import React , { Component } from \"react\";\nimport { Form, Button, FormGroup,Col,Card } from 'react-bootstrap';\nimport \"./style.css\";\n\nclass CompanyInfoForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Name: '',\n      Address: '',\n      City: '',\n      State: '', \n      Zip_Code: '', \n      Email: '', \n      Phone_Number: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const data = new FormData(event.target);\n\n    console.log(...data)\n\n\n    console.log(this.state)\n\n\n    fetch(\"http://localhost:3010/api/organization/\", {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        Name: this.state.Name,\n        Address: this.state.Address,\n        City: this.state.City,\n        State: this.state.State, \n        Zip_Code: this.state.Zip_Code, \n        Email: this.state.Email, \n        Phone_Number: this.state.Phone_Number,\n\n\n      })\n\n    })\n\n  }\n\n  render() {\n    return (\n      <Card>\n  <Card.Header className=\"text-center\"  style={{fontFamily:\"TimesNewRoman\",color:\"darkblue\",fontSize:\"20px\"}}><strong>Organization Information</strong></Card.Header>\n \n  <Card.Body>\n      <Form className =\"companyForm\"onSubmit={this.handleSubmit}>\n          <Form.Row>\n            <Col> <Form.Group>\n          <Form.Label><strong>Organization Name</strong></Form.Label>\n          <Form.Control type=\"input\" name=\"Name\" onChange={this.handleInputChange} required/>\n        </Form.Group></Col>\n            <Col>\n            <Form.Group>\n          <Form.Label><strong>Contact </strong></Form.Label>\n          <Form.Control type=\"input\" name=\"Phone_Number\" onChange={this.handleInputChange} required pattern=\"^\\d{10}$\"/>\n        </Form.Group></Col>\n          </Form.Row>\n        <Form.Row>\n          <Col><Form.Group>\n          <Form.Label><strong>Address</strong></Form.Label>\n          <Form.Control type=\"input\" name=\"Address\" onChange={this.handleInputChange} required/>\n        </Form.Group></Col>\n          <Col> <Form.Group>\n          <Form.Label><strong>City</strong></Form.Label>\n          <Form.Control type=\"input\" name=\"City\" onChange={this.handleInputChange} required/>\n        </Form.Group></Col>\n          </Form.Row> \n        <Form.Row>\n          <Col><Form.Group>\n          <Form.Label><strong>State</strong></Form.Label>\n          <Form.Control type=\"input\" name=\"State\" onChange={this.handleInputChange} required/>\n        </Form.Group></Col>\n          <Col><Form.Group>\n          <Form.Label><strong>Zip Code</strong></Form.Label>\n          <Form.Control type=\"input\" name=\"Zip_Code\" onChange={this.handleInputChange} required pattern=\"^\\d{5}$\"/>\n        </Form.Group></Col>\n        </Form.Row>\n        <Form.Group>\n          <Form.Label><strong>Organization Contact  Email</strong></Form.Label>\n          <Form.Control type=\"email\" name=\"Email\" onChange={this.handleInputChange} required/>\n        </Form.Group>\n        <Button  type=\"submit\" style={{fontFamily:\"TimesNewRoman\",backgroundColor:\"darkblue\"}}><strong>\n          Add Information\n          </strong>\n      </Button>\n        </Form>\n        </Card.Body>\n       \n  </Card>\n    )\n  }\n}\n  export default CompanyInfoForm","import React from \"react\";\nimport styles from './sideBarMenu.css';\n// import Glyphicon from 'react-bootstrap/lib/Glyphicon';\nimport { Nav, NavItem, Navbar, NavDropdown, DropdownItem, Col, Row, Container } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport CompanyInfoForm from '../CompanyInfoForm'\n\n\n\nconst CompanyInfoFormDiv = () => {\n    return (\n        <div className=\"mainDiv\" >\n             <div className=\"row\">\n                <div className=\"col-lg-4\">\n            <div className=\"sideBarMenuContainer\">\n                <Navbar fluid=\"true\" inverse=\"true\" >\n                    <Navbar.Collapse>\n                        <Navbar.Text className=\"nt\">\n                            <NavLink className=\"nl\" to=\"/PatientList\">\n                                Patient List\n                        </NavLink>\n                            <NavLink className=\"nl\" to=\"/CreateRoom\">\n                                Rooms\n                        </NavLink>\n                            <NavLink className=\"nl\" to=\"/CompanyInfo\">\n                                Company Info\n                        </NavLink>\n                            <NavLink className=\"nl\" to=\"/FrontDesk\">\n                                Front Desk\n                        </NavLink>\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n            </div>\n            <div className =\"col-lg-5\">\n            <div className=\"row  cfr1\">\n\n            </div>\n            <div className=\"row\" style={{color:\"darkblue\",fontFamily:\"TimesNewRoman\",fontSize:\"15px\"}}>\n            <div className =\"col-lg-12\">\n            <CompanyInfoForm />\n            </div>\n            </div>\n            \n            </div>\n            </div>\n        </div>\n\n    )\n};\n\n//exportes our Nav component\nexport default CompanyInfoFormDiv;\n\n","import React from \"react\";\nimport Header from \"../components/NavSignIn\";\nimport FooterDiv from \"../components/Footer\";\nimport CompanyInfoFormDiv from \"../components/CompanyInfoFormDiv\";\n\nfunction CompanyInfo() {\n    return (\n        <div>\n        <Header />\n        <CompanyInfoFormDiv />\n        <FooterDiv/>\n        </div>\n    )\n}\n\nexport default CompanyInfo;","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Form, Button, FormGroup, Col,Card } from 'react-bootstrap';\nimport \"./style.css\";\n\n\n\n\nclass FrontDeskForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      First_Name: '',\n      Last_Name: '',\n      Date_Of_Birth: '',\n      Address: '',\n      City: '',\n      State: '',\n      Zip_Code: '',\n      Email: '',\n      Phone_Number: '',\n      orgID: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const data = new FormData(event.target);\n\n    console.log(...data)\n\n\n    console.log(this.state)\n\n\n    fetch(\"http://localhost:3010/api/patient/\", {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        First_Name: this.state.First_Name,\n        Last_Name: this.state.Last_Name,\n        Date_Of_Birth: this.state.Date_Of_Birth,\n        Address: this.state.Address,\n        City: this.state.City,\n        State: this.state.State,\n        Zip_Code: this.state.Zip_Code,\n        Email: this.state.Email,\n        Phone_Number: this.state.Phone_Number,\n        orgID: this.state.orgID\n\n      })\n\n    })\n      .then(res => window.location.reload(true))\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <Card>\n  <Card.Header  style={{fontFamily:\"TimesNewRoman\",color:\"darkblue\",fontSize:\"20px\"}}><strong>Add Patient</strong></Card.Header>\n \n  <Card.Body>\n  <Form onSubmit={this.handleSubmit} style={{color:\"darkblue\",fontFamily:\"TimesNewRoman\",fontSize:\"14px\"}}>\n      <div className=\"row\">\n        <div className=\"col-lg-1\"></div>\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-2\">\n        <Form.Group><Form.Label ><strong>First Name</strong></Form.Label>\n          <Form.Control  className=\"input\"type=\"input\" name=\"First_Name\" onChange={this.handleInputChange} required/></Form.Group>\n          </div>\n          <div className=\"col-lg-2\">\n         <Form.Group><Form.Label ><strong>Last Name</strong></Form.Label>\n          <Form.Control className=\"input\" type=\"input\" name=\"Last_Name\" onChange={this.handleInputChange} required/></Form.Group>\n          </div>\n          <div className=\"col-lg-2\">\n          <Form.Group><Form.Label><strong>Date Of Birth</strong></Form.Label>\n      <Form.Control className=\"input\" type=\"input\" name=\"Date_Of_Birth\" onChange={this.handleInputChange} required /></Form.Group>\n          </div>\n          <div className=\"col-lg-2\"></div>\n          </div>\n          <div className=\"row\">\n          <div className=\"col-lg-1\"></div>\n          <div className=\"col-lg-2\"></div>\n          <div className=\"col-lg-2\">\n          <Form.Group><Form.Label><strong>Address</strong></Form.Label>\n      <Form.Control className=\"input\"type=\"input\" name=\"Address\" onChange={this.handleInputChange} required/></Form.Group>\n          </div>\n          <div className=\"col-lg-2\">\n          <Form.Group><Form.Label><strong>City</strong></Form.Label>\n      <Form.Control  className=\"input\"type=\"input\" name=\"City\" onChange={this.handleInputChange} required/></Form.Group>\n          </div>\n          <div className=\"col-lg-2\">\n          <Form.Group><Form.Label><strong>State</strong></Form.Label>\n      <Form.Control className=\"input\" type=\"input\" name=\"State\" onChange={this.handleInputChange} required/></Form.Group>\n          </div>\n          <div className=\"col-lg-2\"></div>\n          </div>\n          <div className=\"row\">\n          <div className=\"col-lg-1\"></div>\n          <div className=\"col-lg-2\"></div>\n            <div className=\"col-lg-2\">\n            <Form.Group><Form.Label><strong>Zip Code</strong></Form.Label>\n      <Form.Control className=\"input\" type=\"input\" name=\"Zip_Code\" onChange={this.handleInputChange} required pattern=\"^\\d{5}$\" /></Form.Group>\n            </div>\n            <div className=\"col-lg-2\">\n            <Form.Group><Form.Label><strong>Email Address</strong></Form.Label>\n      <Form.Control className=\"input\" type=\"email\" name=\"Email\" onChange={this.handleInputChange}  required/></Form.Group>\n            </div>\n            <div className=\"col-lg-2\">\n            <Form.Group><Form.Label><strong>Phone Number</strong></Form.Label>\n      <Form.Control className=\"input\"  type=\"input\" name=\"Phone_Number\" onChange={this.handleInputChange}  required pattern=\"^\\d{10}$\"/></Form.Group>\n            </div>\n            <div className=\"col-lg-2\"></div>\n          </div>\n          <div className=\"row\">\n          <div className=\"col-lg-1\"></div>\n          <div className=\"col-lg-2\"></div>\n          <div className=\"col-lg-2\"></div>\n            <div className=\"col-lg-2\">\n               <Form.Group> <Form.Label><strong>Organization ID</strong></Form.Label>\n      <Form.Control className=\"input\" type=\"input\" name=\"orgID\" onChange={this.handleInputChange} required/></Form.Group>\n            </div>\n            <div className=\"col-lg-2\"></div>\n            <div className=\"col-lg-2\"></div>\n          </div>\n          <div className=\"row\">\n          <div className=\"col-lg-1\"></div>\n          <div className=\"col-lg-2\"></div>\n          <div className=\"col-lg-2\"></div>\n            <div className=\"col-lg-2\">\n      <Button type=\"submit\" style={{fontFamily:\"TimesNewRoman\",backgroundColor:\"darkblue\"}}><strong>\n      Add Patient\n      </strong>\n      </Button>\n      </div>\n      <div className=\"col-lg-2\"></div>\n            <div className=\"col-lg-2\"></div>\n      </div>\n      </Form>\n  </Card.Body>\n  </Card>\n     \n    )\n  }\n}\nexport default FrontDeskForm","import React, { Component } from \"react\";\nimport { Nav, NavItem, Navbar, NavDropdown, DropdownItem, Button, Dropdown, Form, FormGroup, Card } from 'react-bootstrap';\nimport { Col, Row, Container } from \"../Grid\";\nimport Table from 'react-bootstrap/Table'\nimport \"./style.css\";\n\n\nclass AvailableRoom extends Component {\n    constructor() {\n        super();\n        this.state = {\n            patients: [],\n            rooms: [],\n            id: '',\n            CheckedIn: '',\n            First_Name: '',\n            Last_Name: '',\n            roomID: '',\n            Name: '',\n            Available: '',\n            patientID: '',\n            chosenRoomID: ''\n        };\n\n        this.checkIn = this.checkIn.bind(this);\n        this.checkOut = this.checkOut.bind(this);\n    }\n\n    \n    componentDidMount() {\n        fetch(\"http://localhost:3010/api/room/\", {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n\n\n        }).then((res) => {\n            res.json().then((data) => {\n                this.setState({ rooms: data })\n            });\n        });\n\n        fetch(\"http://localhost:3010/api/patient/\", {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n\n\n        }).then((res) => {\n            res.json().then((data) => {\n                this.setState({ patients: data })\n            });\n        });\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    checkIn = (id, patid, CheckedIn) => {\n        console.log(CheckedIn)\n        console.log(this.state)\n\n\n        fetch(\"http://localhost:3010/api/room/\", {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                id: id,\n                Available: 0\n            })\n\n        })\n\n        fetch(\"http://localhost:3010/api/patient/\", {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                roomID: id,\n                id: patid,\n                CheckedIn: 1\n            })\n\n        }).then(res => console.log(res), this.componentDidMount())\n        .catch(err => console.log(err));\n    \n        }\n\n    checkOut = (id, patid) => {\n        console.log(id)\n        fetch(\"http://localhost:3010/api/room/\", {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                id: id,\n                Available: 1\n            })\n\n        })\n        console.log(patid)\n        fetch(\"http://localhost:3010/api/patient/\", {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                id: patid,\n                roomID: '',\n                CheckedIn: 0\n            })\n\n        }).then(res => console.log(res), this.componentDidMount(), this.componentDidMount())\n        .catch(err => console.log(err));\n    \n        }\n    \n        handleSelect = id => {\n            // what am I suppose to write in there to get the value?\n            this.setState({ chosenRoomID: id })\n        }\n\n    render() {\n        return (\n            <Card className=\"arCard\">\n                 <Card.Header  style={{fontFamily:\"TimesNewRoman\",color:\"darkblue\",fontSize:\"20px\"}}><strong>All Patients</strong></Card.Header>\n                 <Card.Body className=\"text-left\">\n\n                 <Table  striped bordered hover>\n                <thead>\n                    <tr className=\"d-flex\">\n                        <th className=\"col-2\">First Name</th>\n                        <th className=\"col-2\">Last Name</th>\n                        <th className=\"col-2\">Room Number</th>\n                        <th className=\"col-2\">Available Rooms</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {this.state.patients.length ? (\n                        this.state.patients.map(patients => (\n                            <tr className=\"d-flex\" key={patients.id}>\n                                {/* <ListItem key={patients.id}> */}\n\n                                <td className=\"col-2\">{patients.First_Name}</td>\n                                <td className=\"col-2\">{patients.Last_Name}</td>\n                                <td className=\"col-2\">{patients.roomID}</td>\n                               \n                                 <Col size=\"lg-2\">\n                                     <div className=\"row\">\n                                       <div className=\"col-lg-12\">\n                                         <div className=\"row\" style={{height:\"25%\"}}></div>\n                                       <Dropdown className=\"dr\">\n                                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                                        <span id=\"selected\">Choose a Room </span>\n                                    </Dropdown.Toggle>\n\n                                        <Dropdown.Menu >\n                                        {this.state.rooms.length ? (\n                                        this.state.rooms.map(rooms => (\n                                            <Dropdown.Item onSelect={() => {this.handleSelect(rooms.id, patients.CheckedIn)}} key={rooms.id} >{rooms.id} </Dropdown.Item>\n                                            ))\n                                            ) : (\n                                                    <h3>No Rooms to Assign</h3>\n                                                )}\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                           </div>  \n                                        \n                                     </div>\n                                   \n                                </Col>  \n                                                   \n                                <td><Button onClick={() => { this.checkIn(this.state.chosenRoomID, patients.id, patients.CheckedIn) }}>Check-In</Button></td>\n                                <td><Button onClick={() => { this.checkOut(patients.roomID, patients.id) }}>Check-Out</Button></td>\n                            </tr>\n                        ))\n                    ) : (\n                            <h3>No Results to Display</h3>\n                        )}\n                </tbody>\n\n            </Table>\n                 </Card.Body>\n            </Card>\n           \n        )\n    }\n}\nexport default AvailableRoom","import React from \"react\";\nimport \"./style.css\";\nimport { Nav, NavItem, Navbar, NavDropdown, DropdownItem, Button, Dropdown, } from 'react-bootstrap';\nimport { Col, Row, Container } from \"../Grid\";\nimport { NavLink } from 'react-router-dom';\nimport FrontDeskForm from \"../FrontDeskForm\";\nimport AvailableRoom from \"../AvailableRoom\";\n\n\n\nconst FrontDeskDiv = () => {\n    \n    return (\n\n        <div className=\"frontDeskDiv\" >\n<div className=\"row\">\n    <div className=\"col-lg-2\">\n    <div className=\"sideBarMenuContainer\">\n                <Navbar fluid=\"true\" inverse=\"true\" >\n                    <Navbar.Collapse>\n                        <Navbar.Text className=\"nt\">\n                            <NavLink className=\"nl\" to=\"/PatientList\">\n                                Patient List\n                        </NavLink>\n                            <NavLink className=\"nl\" to=\"/CreateRoom\">\n                                Rooms\n                        </NavLink>\n                            <NavLink className=\"nl\" to=\"/CompanyInfo\">\n                                Company Info\n                        </NavLink>\n                            <NavLink className=\"nl\" to=\"/FrontDesk\">\n                                Front Desk\n                        </NavLink>\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                </Navbar>\n\n            </div>\n    </div>\n    <div className=\"col-lg-10\">\n    <AvailableRoom />\n    <div>\n        <br></br>\n             <div className=\"row\">\n                 <div className=\"col-lg-12\">\n                     <FrontDeskForm/>\n                 </div>\n             </div>\n        \n         </div>\n    </div>\n</div>\n           \n           \n        \n                          \n                      \n            </div>\n        \n\n    )\n};\n\n//exportes our Nav component\nexport default FrontDeskDiv;\n\n","import React from \"react\";\nimport Header from \"../components/NavSignIn\";\nimport FooterDiv from \"../components/Footer\";\nimport FrontDeskDiv from \"../components/FrontDesk\";\nfunction FrontDesk() {\n    return (\n        <div>\n        <Header />\n       <FrontDeskDiv/>\n        <FooterDiv/>\n        </div>\n    )\n}\n\nexport default FrontDesk;","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction EditBtn(props) {\n  return (\n    <span className=\"edit-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      Edit\n    </span>\n  );\n}\n\nexport default EditBtn;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, FormGroup ,Card} from 'react-bootstrap';\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport EditBtn from \"../components/EditBtn\";\n\n\nclass Notes extends Component {\n\n\n  // When this component mounts, grab the book with the _id of this.props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  constructor() {\n    super();\n\n    this.state = {\n      notes: [],\n      patient: [],\n      Note: '',\n      Date: '',\n      userID: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInputChange = event => {\n  const { name, value } = event.target;\n  this.setState({\n    [name]: value\n  });\n};\n\nhandleSubmit(event) {\n  event.preventDefault();\n  console.log(this.props.match.params.id)\n  fetch(\"http://localhost:3010/api/notes/\" + this.props.match.params.id, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      Note: this.state.Note,\n      Date: this.state.Date,\n      userID: this.state.userID,\n      patientID: this.props.match.params.id\n    })\n\n  })\n  .then(res => this.componentDidMount())\n  .catch(err => console.log(err));\n}\n\n  componentDidMount() {\n    console.log(this.props.match.params.id)\n    fetch(\"http://localhost:3010/api/notes/\" + this.props.match.params.id, {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n\n\n    }).then((res) => {\n      res.json().then((data) => {\n        this.setState({ notes: data })\n        console.log(this.state);\n      });\n    });\n\n\n    fetch(\"http://localhost:3010/api/patient/\" + this.props.match.params.id, {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n\n\n    }).then((res) => {\n      res.json().then((data) => {\n        this.setState({ patient: data })\n        console.log(this.state);\n\n      });\n    });\n\n  };\n\n  deleteNote = id => {\n    fetch(\"http://localhost:3010/api/notes/\" + id, {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n\n    })\n      .then(res => this.componentDidMount())\n      .catch(err => console.log(err));\n  };\n\n\n\n  editNote = id => {\n\n    fetch(\"http://localhost:3010/api/notes/\" + id, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        Note: this.state.Note,\n        patientID: this.props.match.params.id\n      })\n    })\n      .then(res => this.componentDidMount())\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n            <h1 style={{color:\"darkblue\"}}>\n                                {this.state.patient.map(patients => (\n                                    <p key={patients}>{patients.First_Name} {patients.Last_Name}</p>\n                                ))}\n                            </h1>\n                            <h4 style={{color:\"darkblue\",fontFamily:\"TimesNewRoman\"}}>Room Number: {this.state.patient.map(patients => (\n                                    <p key={patients}>{patients.roomID}</p>\n                                ))}</h4>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-10 md-offset-1\">\n            <article>\n              <h1 style={{color:\"darkblue\"}}>Patient Notes: </h1>\n\n              <br></br>\n              {this.state.notes.map((notes, id) => (\n                <p key={id}>{notes.Note}\n\n                  <DeleteBtn onClick={() => { if (window.confirm('Are you sure you wish to delete this note?')) this.deleteNote(notes.id) }} />\n                </p>\n              ))}\n\n            </article>\n\n          </Col>\n        </Row>\n        <Card>\n                    <Card.Header className=\"text-center\" style={{ fontFamily: \"TimesNewRoman\", color: \"darkblue\", fontSize: \"20px\" }}><strong>Add Note</strong></Card.Header>\n                    <Card.Body className=\"text-left\">\n <Form onSubmit={this.handleSubmit} style={{fontFamily:\"TimesNewRoman\",color:\"darkBlue\"}}>\n          <Form.Group>\n            <Form.Label><strong>Note</strong></Form.Label>\n            <Form.Control type=\"input\" name=\"Note\" onChange={this.handleInputChange}/>\n            <Form.Label><strong>Date Entered</strong></Form.Label>\n            <Form.Control type=\"input\" name=\"Date\" onChange={this.handleInputChange}/>\n            <Form.Label><strong>Your ID</strong></Form.Label>\n            <Form.Control type=\"input\" name=\"userID\" onChange={this.handleInputChange}/>\n          </Form.Group>\n          <Button style={{fontFamily:\"TimesNewRoman\",backgroundColor:\"darkblue\"}} type=\"submit\"><strong>\n            Add Note</strong>\n    </Button>\n        </Form>\n        </Card.Body>\n        </Card>\n        <Row>\n          <Col size=\"md-2\">\n            <Link to=\"/PatientList\" style={{color:\"darkblue\",textDecoration:\"none\"}}>← Back to Patients</Link>\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default Notes;","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faLink, faPowerOff, faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction initFontAwesome() {\n  library.add(faLink);\n  library.add(faUser);\n  library.add(faPowerOff);\n}\n\nexport default initFontAwesome;\n","import React from \"react\";\n\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Loading from \"./components/Loading\";\nimport Home from \"./pages/Home\";\nimport Admin from \"./pages/Admin\";\nimport Profile from \"./components/Profile\";\nimport { useAuth0 } from \"./react-auth0-spa\";\nimport history from \"./utils/history\";\nimport PatientList from \"./pages/PatientList\";\nimport CreateRoom from\"./pages/CreateRoom.js\";\nimport CompanyInfo from\"./pages/CompanyInfo\"; \nimport FrontDesk from\"./pages/FrontDesk\";\nimport Notes from\"./pages/Notes\";\n\n// styles\nimport \"./App.css\";\n\n// fontawesome\nimport initFontAwesome from \"./utils/initFontAwesome\";\ninitFontAwesome();\n\nconst App = () => {\n  const { loading } = useAuth0();\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    \n    <Router history={history}>\n      <div id=\"app\" className=\"d-flex flex-column h-100\">\n    \n       \n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <PrivateRoute path=\"/Admin\" exact component={Admin} />\n            <PrivateRoute path=\"/Profile\" exact component={Profile} />\n            <PrivateRoute path=\"/PatientList\" exact component={PatientList} />\n            <PrivateRoute path=\"/CreateRoom\" exact component={CreateRoom} />\n            <PrivateRoute path=\"/CompanyInfo\" exact component={CompanyInfo} />\n            <PrivateRoute path=\"/FrontDesk\" exact component={FrontDesk} />\n            <PrivateRoute path=\"/Notes/:id\" exact component={Notes} />\n          </Switch>\n    \n       \n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Auth0Provider } from \"./react-auth0-spa\";\nimport config from \"./auth_config.json\";\nimport history from \"./utils/history\";\n\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    // redirect_uri={window.location.origin}\n    redirect_uri={\"https://mediger.herokuapp.com/Admin\"}\n    onRedirectCallback={onRedirectCallback}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loading.5c020bd5.svg\";","module.exports = __webpack_public_path__ + \"static/media/carouselImage2.1f040bb4.png\";","module.exports = __webpack_public_path__ + \"static/media/carouselImage14.77638632.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/carouselImage15.bdf15a1a.png\";"],"sourceRoot":""}
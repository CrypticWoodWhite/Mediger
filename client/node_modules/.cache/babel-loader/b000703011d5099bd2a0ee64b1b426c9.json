{"ast":null,"code":"import _objectWithoutProperties from \"/Users/aakratigarg/Desktop/Mediger/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/aakratigarg/Desktop/Mediger/client/src/components/PrivateRoute.js\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      path = _ref.path,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"path\"]);\n\n  const _useAuth = useAuth0(),\n        isAuthenticated = _useAuth.isAuthenticated,\n        loginWithRedirect = _useAuth.loginWithRedirect;\n\n  useEffect(() => {\n    const fn = async () => {\n      if (!isAuthenticated) {\n        await loginWithRedirect({\n          appState: {\n            targetUrl: path\n          }\n        });\n      }\n    };\n\n    fn();\n  }, [isAuthenticated, loginWithRedirect, path]);\n\n  const render = props => isAuthenticated === true ? React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })) : null;\n\n  return React.createElement(Route, Object.assign({\n    path: path,\n    render: render\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n};\n\nPrivateRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired,\n  path: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired\n};\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/aakratigarg/Desktop/Mediger/client/src/components/PrivateRoute.js"],"names":["React","useEffect","PropTypes","Route","useAuth0","PrivateRoute","Component","component","path","rest","isAuthenticated","loginWithRedirect","fn","appState","targetUrl","render","props","propTypes","oneOfType","element","func","isRequired","string","arrayOf"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,MAAMC,YAAY,GAAG,UAA6C;AAAA,MAA/BC,SAA+B,QAA1CC,SAA0C;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAXC,IAAW;;AAAA,mBACjBL,QAAQ,EADS;AAAA,QACxDM,eADwD,YACxDA,eADwD;AAAA,QACvCC,iBADuC,YACvCA,iBADuC;;AAGhEV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,EAAE,GAAG,YAAY;AACrB,UAAI,CAACF,eAAL,EAAsB;AACpB,cAAMC,iBAAiB,CAAC;AACtBE,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,SAAS,EAAEN;AAAb;AADY,SAAD,CAAvB;AAGD;AACF,KAND;;AAOAI,IAAAA,EAAE;AACH,GATQ,EASN,CAACF,eAAD,EAAkBC,iBAAlB,EAAqCH,IAArC,CATM,CAAT;;AAWA,QAAMO,MAAM,GAAGC,KAAK,IAClBN,eAAe,KAAK,IAApB,GAA2B,oBAAC,SAAD,oBAAeM,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA3B,GAAsD,IADxD;;AAGA,SAAO,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAER,IAAb;AAAmB,IAAA,MAAM,EAAEO;AAA3B,KAAuCN,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAlBD;;AAoBAJ,YAAY,CAACY,SAAb,GAAyB;AACvBV,EAAAA,SAAS,EAAEL,SAAS,CAACgB,SAAV,CAAoB,CAAChB,SAAS,CAACiB,OAAX,EAAoBjB,SAAS,CAACkB,IAA9B,CAApB,EACRC,UAFoB;AAGvBb,EAAAA,IAAI,EAAEN,SAAS,CAACgB,SAAV,CAAoB,CACxBhB,SAAS,CAACoB,MADc,EAExBpB,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACoB,MAA5B,CAFwB,CAApB,EAGHD;AANoB,CAAzB;AASA,eAAehB,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n  const { isAuthenticated, loginWithRedirect } = useAuth0();\n\n  useEffect(() => {\n    const fn = async () => {\n      if (!isAuthenticated) {\n        await loginWithRedirect({\n          appState: { targetUrl: path }\n        });\n      }\n    };\n    fn();\n  }, [isAuthenticated, loginWithRedirect, path]);\n\n  const render = props =>\n    isAuthenticated === true ? <Component {...props} /> : null;\n\n  return <Route path={path} render={render} {...rest} />;\n};\n\nPrivateRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n    .isRequired,\n  path: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ]).isRequired\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}
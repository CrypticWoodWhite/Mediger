{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brandonn\\\\Homework\\\\Projects\\\\Mediger\\\\client\\\\src\\\\components\\\\AvailableRoom\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button, FormGroup } from 'react-bootstrap';\nimport \"./style.css\";\n\nclass AvailableRoom extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      rooms: [],\n      id: '',\n      Name: '',\n      Available: '',\n      patientID: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    console.log(...data);\n    console.log(this.state);\n    fetch(\"http://localhost:3010/api/room/:id\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        First_Name: this.state.First_Name,\n        Last_Name: this.state.Last_Name,\n        id: this.state.id,\n        Available: 0\n      })\n    }).then(res => this.componentDidMount()).catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3010/api/room/\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      res.json().then(data => {\n        this.setState({\n          rooms: data\n        });\n        console.log(this.state);\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Room Number\"), React.createElement(Form.Control, {\n      type: \"input\",\n      name: \"Name\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Patient ID\"), React.createElement(Form.Control, {\n      type: \"input\",\n      name: \"patientID\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Check-in\",\n      name: \"Available\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Check Patient In\"));\n  }\n\n}\n\nexport default AvailableRoom;","map":{"version":3,"sources":["C:/Users/brandonn/Homework/Projects/Mediger/client/src/components/AvailableRoom/index.js"],"names":["React","Component","Form","Button","FormGroup","AvailableRoom","constructor","handleInputChange","event","target","name","value","setState","state","rooms","id","Name","Available","patientID","handleSubmit","bind","preventDefault","data","FormData","console","log","fetch","method","headers","body","JSON","stringify","First_Name","Last_Name","then","res","componentDidMount","catch","err","json","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, FormGroup } from 'react-bootstrap';\nimport \"./style.css\";\n\n\nclass AvailableRoom extends Component {\n    constructor() {\n        super();\n        this.state = {\n            \n            rooms: [],\n            id: '',\n            Name: '',\n            Available: '',\n            patientID: ''\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const data = new FormData(event.target);\n\n        console.log(...data)\n\n\n        console.log(this.state)\n\n\n        fetch(\"http://localhost:3010/api/room/:id\", {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                First_Name: this.state.First_Name,\n                Last_Name: this.state.Last_Name,\n                id: this.state.id,\n                Available: 0\n            })\n\n        })\n            .then(res => this.componentDidMount())\n            .catch(err => console.log(err));\n    }\n    componentDidMount() {\n        fetch(\"http://localhost:3010/api/room/\", {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n\n\n        }).then((res) => {\n            res.json().then((data) => {\n                this.setState({ rooms: data })\n                console.log(this.state);\n            });\n        });\n    }\n    render() {\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Room Number</Form.Label>\n                    <Form.Control type=\"input\" name=\"Name\" onChange={this.handleInputChange} />\n                    <Form.Label>Patient ID</Form.Label>\n                    <Form.Control type=\"input\" name=\"patientID\" onChange={this.handleInputChange} />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check-in\" name=\"Available\"/>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Check Patient In\n    </Button>\n            </Form>\n        )\n    }\n}\nexport default AvailableRoom"]},"metadata":{},"sourceType":"module"}
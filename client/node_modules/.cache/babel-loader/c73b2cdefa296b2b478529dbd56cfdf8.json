{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brandonn\\\\Homework\\\\Projects\\\\Mediger\\\\client\\\\src\\\\pages\\\\Notes.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nclass Notes extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notes: [],\n      patient: []\n    };\n  }\n\n  // When this component mounts, grab the book with the _id of this.props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n    fetch(\"http://localhost:3010/api/notes/\" + this.props.match.params.id, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      res.json().then(data => {\n        this.setState({\n          notes: data\n        });\n        console.log(this.state);\n      });\n    });\n    fetch(\"http://localhost:3010/api/patient/\" + this.props.match.params.id, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      res.json().then(data => {\n        this.setState({\n          patient: data\n        });\n        console.log(this.state);\n      });\n    });\n    this.checkState();\n  }\n\n  checkState() {\n    console.log(this.state);\n  }\n\n  render() {\n    return React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.patient.map(patients => React.createElement(\"p\", {\n      key: patients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, patients.First_Name, \" \", patients.Last_Name)))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-10 md-offset-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Patient Notes\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), this.state.notes.map((notes, id) => React.createElement(\"p\", {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, notes.Note))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/PatientList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"\\u2190 Back to Patients\"))));\n  }\n\n}\n\nexport default Notes;","map":{"version":3,"sources":["C:/Users/brandonn/Homework/Projects/Mediger/client/src/pages/Notes.js"],"names":["React","Component","Link","Col","Row","Container","Jumbotron","Notes","state","notes","patient","componentDidMount","console","log","props","match","params","id","fetch","method","headers","then","res","json","data","setState","checkState","render","map","patients","First_Name","Last_Name","Note"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\n\r\nclass Notes extends Component {\r\n\r\n  state = {\r\n    notes: [],\r\n    patient: []\r\n  }\r\n\r\n  // When this component mounts, grab the book with the _id of this.props.match.params.id\r\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\r\n\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.match.params.id)\r\n    fetch(\"http://localhost:3010/api/notes/\" + this.props.match.params.id, {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n\r\n\r\n    }).then((res) => {\r\n        res.json().then((data) => {\r\n            this.setState({ notes: data})\r\n            console.log(this.state);\r\n        });\r\n    });\r\n    fetch(\"http://localhost:3010/api/patient/\" + this.props.match.params.id, {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n\r\n\r\n    }).then((res) => {\r\n        res.json().then((data) => {\r\n            this.setState({ patient: data})\r\n            console.log(this.state);\r\n            \r\n        });\r\n    });\r\n    this.checkState()\r\n};\r\n\r\ncheckState() {\r\n  console.log(this.state);\r\n}\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <Jumbotron>\r\n              <h1>\r\n              {this.state.patient.map(patients => (\r\n            <p key={patients}>{patients.First_Name} {patients.Last_Name}</p>\r\n          ))}\r\n              </h1>\r\n            </Jumbotron>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col size=\"md-10 md-offset-1\">\r\n            <article>\r\n              <h1>Patient Notes</h1>\r\n\r\n<br></br>\r\n          {this.state.notes.map((notes, id) => (\r\n            <p key={id}>{notes.Note}</p>\r\n          ))}\r\n\r\n            </article>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col size=\"md-2\">\r\n            <Link to=\"/PatientList\">‚Üê Back to Patients</Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notes;"]},"metadata":{},"sourceType":"module"}